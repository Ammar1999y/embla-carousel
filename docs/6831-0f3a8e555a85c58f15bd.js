"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[6831],{6831:function(n,l,t){t.r(l),l.default="import React, { useCallback, useEffect, useState } from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport AutoScroll from 'embla-carousel-auto-scroll'\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons\n} from '../EmblaCarouselArrowButtons'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [\n    AutoScroll({ playOnInit: false })\n  ])\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi)\n\n  const onButtonAutoplayClick = useCallback(\n    (callback: () => void) => {\n      const autoScroll = emblaApi?.plugins()?.autoScroll\n      if (!autoScroll) return\n\n      const resetOrStop =\n        autoScroll.options.stopOnInteraction === false\n          ? autoScroll.reset\n          : autoScroll.stop\n\n      resetOrStop()\n      callback()\n    },\n    [emblaApi]\n  )\n\n  const toggleAutoplay = useCallback(() => {\n    const autoScroll = emblaApi?.plugins()?.autoScroll\n    if (!autoScroll) return\n\n    const playOrStop = autoScroll.isPlaying()\n      ? autoScroll.stop\n      : autoScroll.play\n    playOrStop()\n  }, [emblaApi])\n\n  useEffect(() => {\n    const autoScroll = emblaApi?.plugins()?.autoScroll\n    if (!autoScroll) return\n\n    setIsPlaying(autoScroll.isPlaying())\n    emblaApi\n      .on('autoScroll:play', () => setIsPlaying(true))\n      .on('autoScroll:stop', () => setIsPlaying(false))\n      .on('reInit', () => setIsPlaying(false))\n  }, [emblaApi])\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton\n            onClick={() => onButtonAutoplayClick(onPrevButtonClick)}\n            disabled={prevBtnDisabled}\n          />\n          <NextButton\n            onClick={() => onButtonAutoplayClick(onNextButtonClick)}\n            disabled={nextBtnDisabled}\n          />\n        </div>\n\n        <button className=\"embla__play\" onClick={toggleAutoplay} type=\"button\">\n          {isPlaying ? 'Stop' : 'Start'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n"}}]);
//# sourceMappingURL=6831-0f3a8e555a85c58f15bd.js.map