"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[5743],{5743:function(n,t,a){a.r(t),t.default="import { EmblaCarouselType } from 'embla-carousel'\n\nexport const addPlayBtnListeners = (\n  emblaApi: EmblaCarouselType,\n  playBtn: HTMLElement\n): (() => void) => {\n  const togglePlayBtnState = (emblaApi: EmblaCarouselType): void => {\n    const autoplay = emblaApi?.plugins()?.autoplay\n    if (!autoplay) return\n\n    const buttonText = autoplay.isPlaying() ? 'Start' : 'Stop'\n    playBtn.innerHTML = buttonText\n  }\n\n  const onPlayBtnClick = (): void => {\n    const autoplay = emblaApi?.plugins()?.autoplay\n    if (!autoplay) return\n\n    const playOrStop = autoplay.isPlaying() ? autoplay.stop : autoplay.play\n    playOrStop()\n  }\n\n  playBtn.addEventListener('click', onPlayBtnClick)\n  emblaApi\n    .on('autoplay:play', togglePlayBtnState)\n    .on('autoplay:stop', togglePlayBtnState)\n    .on('reInit', togglePlayBtnState)\n\n  return () => {\n    playBtn.removeEventListener('click', onPlayBtnClick)\n    emblaApi\n      .off('autoplay:play', togglePlayBtnState)\n      .off('autoplay:stop', togglePlayBtnState)\n      .off('reInit', togglePlayBtnState)\n  }\n}\n\nexport const addNavBtnListeners = (\n  emblaApi: EmblaCarouselType,\n  ...navButtons: HTMLElement[]\n): (() => void) => {\n  const onNavClick = () => {\n    const autoplay = emblaApi?.plugins()?.autoplay\n    if (!autoplay) return\n\n    const resetOrStop =\n      autoplay.options.stopOnInteraction === false\n        ? autoplay.reset\n        : autoplay.stop\n\n    resetOrStop()\n  }\n\n  navButtons.forEach((navButton) =>\n    navButton.addEventListener('click', onNavClick, true)\n  )\n\n  return () => {\n    navButtons.forEach((navButton) =>\n      navButton.removeEventListener('click', onNavClick, true)\n    )\n  }\n}\n"}}]);
//# sourceMappingURL=5743-bf95f05c37cd37c70843.js.map