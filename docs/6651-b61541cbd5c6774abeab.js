"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[6651],{6651:function(a,n,t){t.r(n),n.default="import { useCallback, useEffect, useState } from 'react';\n\nexport const useAutoplay = (emblaApi) => {\n    const [autoplayIsPlaying, setAutoplayIsPlaying] = useState(false);\n    \n    const onAutoplayButtonClick = useCallback((callback) => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const resetOrStop = autoplay.options.stopOnInteraction === false\n            ? autoplay.reset\n            : autoplay.stop;\n        \n        resetOrStop();\n        callback();\n    }, [emblaApi]);\n    \n    const toggleAutoplay = useCallback(() => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const playOrStop = autoplay.isPlaying() ? autoplay.stop : autoplay.play;\n        playOrStop();\n    }, [emblaApi]);\n    \n    useEffect(() => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        setAutoplayIsPlaying(autoplay.isPlaying());\n        emblaApi\n            .on('autoplay:play', () => setAutoplayIsPlaying(true))\n            .on('autoplay:stop', () => setAutoplayIsPlaying(false))\n            .on('reInit', () => setAutoplayIsPlaying(autoplay.isPlaying()));\n    }, [emblaApi]);\n    \n    return {\n        autoplayIsPlaying,\n        toggleAutoplay,\n        onAutoplayButtonClick\n    };\n};\n"}}]);
//# sourceMappingURL=6651-b61541cbd5c6774abeab.js.map