{"version":3,"file":"cd62f0220bddf0c3dfe5385aed851128575279cb-4fe4c47e0e1617007c4b.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorContext.tsx","webpack://embla-carousel-docs/../embla-carousel/src/components/Options.ts","webpack://embla-carousel-docs/./src/utils/numberWithinRange.ts","webpack://embla-carousel-docs/./src/components/Sandbox/SandboxGeneratorExampleDotButton.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/SandboxGeneratorExampleArrowButtons.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/SandboxGeneratorExampleSelectedSnapDisplay.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/SandboxGeneratorExample.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/sandboxGeneratorToggleFeatures.ts","webpack://embla-carousel-docs/./src/components/Sandbox/sandboxGeneratorCreateOptions.ts","webpack://embla-carousel-docs/./src/components/Sandbox/Vanilla/createSandboxVanillaSlidesHtml.ts","webpack://embla-carousel-docs/./src/components/Sandbox/sandboxGenerator.ts","webpack://embla-carousel-docs/./src/components/Sandbox/sandboxGeneratorCreateStyles.ts","webpack://embla-carousel-docs/../src/components/Options.ts","webpack://embla-carousel-docs/../src/components/Autoplay.ts","webpack://embla-carousel-docs/../src/components/utils.ts","webpack://embla-carousel-docs/../src/components/ClassNames.ts","webpack://embla-carousel-docs/ ^\\.\\/.*\\/embla\\-carousel\\.html$ namespace object","webpack://embla-carousel-docs/ ^\\.\\/.*\\/slide\\.html$ namespace object"],"sourcesContent":["import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n  useState\n} from 'react'\nimport { defaultOptions } from '../../../../embla-carousel/src/components/Options'\nimport { OptionsType } from 'embla-carousel/components/Options'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { numberWithinRange } from 'utils/numberWithinRange'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\n\nexport const CONTEXT_DEFAULT_VALUE: CarouselGeneratorContextType = {\n  formData: {\n    ...(defaultOptions as OptionsType),\n    id: 'embla-carousel-generator',\n    framework: '',\n    slideList: arrayFromNumber(5),\n    accessibility: false,\n    slideSize: '100',\n    slideGapSize: '10',\n    edgeGap: '0',\n    styles: '',\n    navigationPrevNextButtons: false,\n    navigationDots: false,\n    selectedSnapDisplay: false,\n    autoplay: false,\n    classNames: false,\n    wheelGestures: false\n  },\n  onChange: () => undefined,\n  onCheckboxChange: () => undefined,\n  onRadioChange: () => undefined,\n  onNumberChange: () => undefined,\n  onNumberBlur: () => undefined\n}\n\nexport type CarouselGeneratorContextType = {\n  formData: SandboxGeneratorSettingsType\n  onChange: <Key extends keyof SandboxGeneratorSettingsType>(\n    key: Key,\n    value: SandboxGeneratorSettingsType[Key]\n  ) => void\n  onCheckboxChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onRadioChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onNumberBlur: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const CarouselGeneratorContext =\n  createContext<CarouselGeneratorContextType>(CONTEXT_DEFAULT_VALUE)\n\ntype PropType = PropsWithChildren<{}>\n\nexport const CarouselGeneratorProvider = (props: PropType) => {\n  const { children } = props\n  const [formData, setFormData] = useState<SandboxGeneratorSettingsType>(\n    CONTEXT_DEFAULT_VALUE.formData\n  )\n\n  const onChange: CarouselGeneratorContextType['onChange'] = useCallback(\n    (key, value) => {\n      setFormData((currentFormValues) => ({\n        ...currentFormValues,\n        [key]: value\n      }))\n    },\n    []\n  )\n\n  const onCheckboxChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, checked } = event.currentTarget\n      const fieldName = name as keyof SandboxGeneratorSettingsType\n\n      onChange(fieldName, checked)\n    },\n    [onChange]\n  )\n\n  const onRadioChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof SandboxGeneratorSettingsType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget\n      const fieldName = name as keyof SandboxGeneratorSettingsType\n\n      onChange(fieldName, value)\n    },\n    [onChange]\n  )\n\n  const onNumberBlur = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const input = event.currentTarget\n      const fieldName = input.name as keyof SandboxGeneratorSettingsType\n      const minValue = parseInt(input.getAttribute('min') || '', 10)\n      const maxValue = parseInt(input.getAttribute('max') || '', 10)\n      const value = numberWithinRange(\n        parseFloat(input.value || '0'),\n        minValue,\n        maxValue\n      )\n\n      onChange(fieldName, value.toString())\n    },\n    [onChange]\n  )\n\n  const value = useMemo(\n    () => ({\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    }),\n    [\n      formData,\n      onChange,\n      onCheckboxChange,\n      onRadioChange,\n      onNumberChange,\n      onNumberBlur\n    ]\n  )\n\n  return (\n    <CarouselGeneratorContext.Provider value={value}>\n      {children}\n    </CarouselGeneratorContext.Provider>\n  )\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisDirectionOptionType, AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: AxisDirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","export const numberWithinRange = (\n  number: number,\n  min: number,\n  max: number\n): number => Math.min(Math.max(number, min), max)\n","import React, {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useState\n} from 'react'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ntype UseDotButtonType = {\n  selectedIndex: number\n  scrollSnaps: number[]\n  onDotButtonClick: (index: number) => void\n}\n\nexport const useDotButton = (\n  emblaApi: EmblaCarouselType | undefined,\n  onButtonClick?: (emblaApi: EmblaCarouselType) => void\n): UseDotButtonType => {\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [scrollSnaps, setScrollSnaps] = useState<number[]>([])\n\n  const onDotButtonClick = useCallback(\n    (index: number) => {\n      if (!emblaApi) return\n      emblaApi.scrollTo(index)\n      if (onButtonClick) onButtonClick(emblaApi)\n    },\n    [emblaApi, onButtonClick]\n  )\n\n  const onInit = useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList())\n  }, [])\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    setSelectedIndex(emblaApi.selectedScrollSnap())\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    onInit(emblaApi)\n    onSelect(emblaApi)\n    emblaApi.on('reInit', onInit)\n    emblaApi.on('reInit', onSelect)\n    emblaApi.on('select', onSelect)\n  }, [emblaApi, onInit, onSelect])\n\n  return {\n    selectedIndex,\n    scrollSnaps,\n    onDotButtonClick\n  }\n}\n\ntype PropType = PropsWithChildren<\n  React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n>\n\nexport const DotButton: React.FC<PropType> = (props) => {\n  const { children, ...restProps } = props\n\n  return (\n    <button type=\"button\" {...restProps}>\n      {children}\n    </button>\n  )\n}\n","import React, {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useState\n} from 'react'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ntype UsePrevNextButtonsType = {\n  prevBtnDisabled: boolean\n  nextBtnDisabled: boolean\n  onPrevButtonClick: () => void\n  onNextButtonClick: () => void\n}\n\nexport const usePrevNextButtons = (\n  emblaApi: EmblaCarouselType | undefined,\n  onButtonClick?: (emblaApi: EmblaCarouselType) => void\n): UsePrevNextButtonsType => {\n  const [prevBtnDisabled, setPrevBtnDisabled] = useState(true)\n  const [nextBtnDisabled, setNextBtnDisabled] = useState(true)\n\n  const onPrevButtonClick = useCallback(() => {\n    if (!emblaApi) return\n    emblaApi.scrollPrev()\n    if (onButtonClick) onButtonClick(emblaApi)\n  }, [emblaApi, onButtonClick])\n\n  const onNextButtonClick = useCallback(() => {\n    if (!emblaApi) return\n    emblaApi.scrollNext()\n    if (onButtonClick) onButtonClick(emblaApi)\n  }, [emblaApi, onButtonClick])\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    setPrevBtnDisabled(!emblaApi.canScrollPrev())\n    setNextBtnDisabled(!emblaApi.canScrollNext())\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    onSelect(emblaApi)\n    emblaApi.on('reInit', onSelect)\n    emblaApi.on('select', onSelect)\n  }, [emblaApi, onSelect])\n\n  return {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  }\n}\n\ntype PropType = PropsWithChildren<\n  React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > & {\n    isRightToLeft: boolean\n    isVertical: boolean\n  }\n>\n\nexport const PrevButton: React.FC<PropType> = (props) => {\n  const { children, isRightToLeft, isVertical, ...restProps } = props\n\n  return (\n    <button\n      className=\"embla__button embla__button--prev\"\n      type=\"button\"\n      {...restProps}\n    >\n      <svg className=\"embla__button__svg\" viewBox=\"0 0 532 532\">\n        {!isVertical && isRightToLeft && (\n          <path\n            fill=\"currentColor\"\n            d=\"M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z\"\n          />\n        )}\n\n        {!isVertical && !isRightToLeft && (\n          <path\n            fill=\"currentColor\"\n            d=\"M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z\"\n          />\n        )}\n\n        {isVertical && (\n          <path\n            fill=\"currentColor\"\n            d=\"M520.646 355.66c13.805 13.793 13.805 36.208 0 50.001-13.804 13.785-36.238 13.785-50.034 0L266 201.22 61.391 405.66c-13.805 13.785-36.239 13.785-50.044 0-13.796-13.793-13.796-36.208 0-50.002 22.947-22.928 206.507-206.395 229.454-229.332a35.065 35.065 0 0 1 25.126-10.326c9.2 0 18.26 3.393 25.2 10.326 45.901 45.865 206.564 206.404 229.52 229.332Z\"\n          />\n        )}\n      </svg>\n      {children}\n    </button>\n  )\n}\n\nexport const NextButton: React.FC<PropType> = (props) => {\n  const { children, isRightToLeft, isVertical, ...restProps } = props\n\n  return (\n    <button\n      className=\"embla__button embla__button--next\"\n      type=\"button\"\n      {...restProps}\n    >\n      <svg className=\"embla__button__svg\" viewBox=\"0 0 532 532\">\n        {!isVertical && isRightToLeft && (\n          <path\n            fill=\"currentColor\"\n            d=\"M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z\"\n          />\n        )}\n\n        {!isVertical && !isRightToLeft && (\n          <path\n            fill=\"currentColor\"\n            d=\"M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z\"\n          />\n        )}\n\n        {isVertical && (\n          <path\n            fill=\"currentColor\"\n            d=\"M11.354 176.34c-13.805-13.793-13.805-36.208 0-50.001 13.804-13.785 36.238-13.785 50.034 0L266 330.78l204.61-204.442c13.805-13.785 36.239-13.785 50.044 0 13.796 13.793 13.796 36.208 0 50.002a5994246.277 5994246.277 0 0 0-229.454 229.332 35.065 35.065 0 0 1-25.126 10.326c-9.2 0-18.26-3.393-25.2-10.326C194.973 359.808 34.31 199.269 11.354 176.34Z\"\n          />\n        )}\n      </svg>\n      {children}\n    </button>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ntype UseSelectedSnapDisplayType = {\n  selectedSnap: number\n  snapCount: number\n}\n\nexport const useSelectedSnapDisplay = (\n  emblaApi: EmblaCarouselType | undefined\n): UseSelectedSnapDisplayType => {\n  const [selectedSnap, setSelectedSnap] = useState(0)\n  const [snapCount, setSnapCount] = useState(0)\n\n  const updateScrollSnapState = useCallback((emblaApi: EmblaCarouselType) => {\n    setSnapCount(emblaApi.scrollSnapList().length)\n    setSelectedSnap(emblaApi.selectedScrollSnap())\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    updateScrollSnapState(emblaApi)\n    emblaApi.on('select', updateScrollSnapState)\n    emblaApi.on('reInit', updateScrollSnapState)\n  }, [emblaApi, updateScrollSnapState])\n\n  return {\n    selectedSnap,\n    snapCount\n  }\n}\n\ntype PropType = {\n  selectedSnap: number\n  snapCount: number\n}\n\nexport const SelectedSnapDisplay: React.FC<PropType> = (props) => {\n  const { selectedSnap, snapCount } = props\n\n  return (\n    <div className=\"embla__selected-snap-display\">\n      {selectedSnap + 1} / {snapCount}\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { EmblaOptionsType, EmblaCarouselType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport { DotButton, useDotButton } from './SandboxGeneratorExampleDotButton'\nimport {\n  PrevButton,\n  NextButton,\n  usePrevNextButtons\n} from './SandboxGeneratorExampleArrowButtons'\nimport {\n  SelectedSnapDisplay,\n  useSelectedSnapDisplay\n} from './SandboxGeneratorExampleSelectedSnapDisplay'\nimport Autoplay from 'embla-carousel-autoplay'\nimport ClassNames from 'embla-carousel-class-names'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n  navigationPrevNextButtons?: boolean\n  navigationDots?: boolean\n  selectedSnapDisplay?: boolean\n  autoplay?: boolean\n  classNames?: boolean\n}\n\nexport const SandboxGeneratorExample: React.FC<PropType> = (props) => {\n  const {\n    slides,\n    options,\n    navigationPrevNextButtons,\n    navigationDots,\n    selectedSnapDisplay,\n    autoplay,\n    classNames\n  } = props\n  const isRightToLeft = options?.direction === 'rtl'\n  const isVertical = options?.axis === 'y'\n\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [\n    ...(autoplay ? [Autoplay()] : []),\n    ...(classNames ? [ClassNames()] : [])\n  ])\n\n  const onButtonClick = useCallback((emblaApi: EmblaCarouselType) => {\n    const { autoplay } = emblaApi.plugins()\n    if (!autoplay) return\n    if (autoplay.options.stopOnInteraction !== false) autoplay.stop()\n  }, [])\n\n  const { selectedIndex, scrollSnaps, onDotButtonClick } = useDotButton(\n    emblaApi,\n    onButtonClick\n  )\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi, onButtonClick)\n\n  const { selectedSnap, snapCount } = useSelectedSnapDisplay(emblaApi)\n\n  return (\n    <div className=\"embla\" dir={isRightToLeft ? 'rtl' : undefined}>\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">{index + 1}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {(navigationPrevNextButtons || navigationDots) && (\n        <div className=\"embla__controls\">\n          {navigationPrevNextButtons && (\n            <div className=\"embla__buttons\">\n              <PrevButton\n                onClick={onPrevButtonClick}\n                disabled={prevBtnDisabled}\n                isRightToLeft={isRightToLeft}\n                isVertical={isVertical}\n              />\n              <NextButton\n                onClick={onNextButtonClick}\n                disabled={nextBtnDisabled}\n                isRightToLeft={isRightToLeft}\n                isVertical={isVertical}\n              />\n            </div>\n          )}\n\n          {navigationDots && (\n            <div className=\"embla__dots\">\n              {scrollSnaps.map((_, index) => (\n                <DotButton\n                  key={index}\n                  onClick={() => onDotButtonClick(index)}\n                  className={'embla__dot'.concat(\n                    index === selectedIndex ? ' embla__dot--selected' : ''\n                  )}\n                />\n              ))}\n            </div>\n          )}\n\n          {selectedSnapDisplay && (\n            <SelectedSnapDisplay\n              selectedSnap={selectedSnap}\n              snapCount={snapCount}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { SandboxModuleType } from 'consts/sandbox'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\n\nconst START = '{?\\\\/\\\\*'\nconst END = '\\\\*\\\\/}?'\nconst MIDDLE = `${END}([\\\\s\\\\S]*?)${START}`\n\nconst sandboxGeneratorToggleFeature = (\n  featureLabel: string,\n  featureActive: boolean,\n  carouselScript: string\n): string => {\n  let regexString = ''\n\n  if (featureActive) {\n    regexString = `(${START}__${featureLabel}_REPLACE_START__${END}\\n?)|(${START}__${featureLabel}_REPLACE_END__${END}\\n?)`\n  } else {\n    regexString = `${START}__${featureLabel}_REPLACE_START__${MIDDLE}__${featureLabel}_REPLACE_END__${END}\\n?`\n  }\n\n  const regex = new RegExp(regexString, 'g')\n  return carouselScript.replace(regex, '')\n}\n\nexport const sandboxGeneratorToggleFeatures = (\n  carouselScript: SandboxModuleType,\n  settings: SandboxGeneratorSettingsType\n): string => {\n  let carouselScriptWithFeatures = carouselScript.default\n  const {\n    axis,\n    direction,\n    navigationPrevNextButtons,\n    navigationDots,\n    selectedSnapDisplay,\n    autoplay,\n    classNames\n  } = settings\n  const hasNavigation = navigationPrevNextButtons || navigationDots\n  const hasAutoplayAndNavigation = autoplay && hasNavigation\n  const isHorizontal = axis === 'x'\n  const isLeftToRight = direction === 'ltr'\n  const isRightToLeft = !isLeftToRight\n\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'CONTROLS',\n    hasNavigation || selectedSnapDisplay,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS',\n    navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'DOT_BUTTONS',\n    navigationDots,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'SELECTED_SNAP_DISPLAY',\n    selectedSnapDisplay,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'NAV_AUTOPLAY',\n    hasAutoplayAndNavigation,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'DIRECTION_RTL',\n    isRightToLeft,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'DIRECTION_LTR',\n    isLeftToRight,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_LTR',\n    isHorizontal && isLeftToRight && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_RTL',\n    isHorizontal && isRightToLeft && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'PREV_NEXT_BUTTONS_VERTICAL',\n    !isHorizontal && navigationPrevNextButtons,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'PLUGINS',\n    autoplay || classNames,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'AUTOPLAY',\n    autoplay,\n    carouselScriptWithFeatures\n  )\n  carouselScriptWithFeatures = sandboxGeneratorToggleFeature(\n    'CLASS_NAMES',\n    classNames,\n    carouselScriptWithFeatures\n  )\n\n  return carouselScriptWithFeatures\n}\n","import { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { EmblaOptionsType } from 'embla-carousel'\n\nexport const sandboxGeneratorCreateOptions = (\n  settings: SandboxGeneratorSettingsType\n): EmblaOptionsType => {\n  const {\n    axis,\n    align,\n    direction,\n    containScroll,\n    loop,\n    dragFree,\n    slidesToScroll\n  } = settings\n\n  return {\n    ...(axis !== 'x' && { axis }),\n    ...(align !== 'center' && { align }),\n    ...(dragFree && { dragFree }),\n    ...(direction !== 'ltr' && { direction }),\n    ...(!loop && !containScroll && { containScroll: false }),\n    ...(loop && { loop }),\n    ...(slidesToScroll !== 1 && { slidesToScroll })\n  }\n}\n","import { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { SandboxModuleType } from 'consts/sandbox'\n\nconst SANDBOX_SLIDE_NR_REGEX = /__replace_sandbox_slide_nr__/g\nconst SANDBOX_SLIDES = /__replace_sandbox_slides__/\n\nexport const createSandboxVanillaSlidesHtml = (\n  settings: SandboxGeneratorSettingsType,\n  slideHTML: SandboxModuleType,\n  carouselHtml: string\n): string => {\n  const slidesHtml = settings.slideList.map((index) => {\n    const slideNumber = (index + 1).toString()\n    return slideHTML.default.replace(SANDBOX_SLIDE_NR_REGEX, slideNumber)\n  })\n\n  return carouselHtml.replace(SANDBOX_SLIDES, slidesHtml.join(''))\n}\n","import {\n  SandboxGeneratorSettingsType,\n  SandboxModuleScriptType\n} from 'consts/sandbox'\nimport {\n  sandboxStaticExtractReactModules,\n  sandboxStaticExtractVanillaModules\n} from './sandboxStaticExtractModules'\nimport { sandboxStaticExtractPlugins } from './sandboxStaticExtractPlugins'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { sandboxGeneratorToggleFeatures } from 'components/Sandbox/sandboxGeneratorToggleFeatures'\nimport { sandboxGeneratorCreateOptions } from 'components/Sandbox/sandboxGeneratorCreateOptions'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { createSandboxReact } from 'components/Sandbox/React/createSandboxReact'\nimport { createSandboxVanilla } from 'components/Sandbox/Vanilla/createSandboxVanilla'\nimport { createSandboxVanillaSlidesHtml } from 'components/Sandbox/Vanilla/createSandboxVanillaSlidesHtml'\nimport { SANDBOX_REACT_FOLDERS } from 'components/Sandbox/React/sandboxReactFolders'\nimport { SANDBOX_VANILLA_FOLDERS } from 'components/Sandbox/Vanilla/sandboxVanillaFolders'\nimport {\n  SandboxLanguageType,\n  SandboxModuleType,\n  SandboxSelectionType,\n  SANDBOX_LANGUAGES\n} from 'consts/sandbox'\nimport {\n  createSandboxFunctionsWithLabels,\n  sandboxLanguageUtils\n} from 'utils/sandbox'\n\nconst DEFAULT_SETTINGS = CONTEXT_DEFAULT_VALUE.formData\n\nconst sandboxVanilla = async (\n  settings: SandboxGeneratorSettingsType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType,\n  path: string = 'CarouselGenerator'\n): Promise<string> => {\n  const { vanillaScriptExtension, formatScript } = await sandboxLanguageUtils(\n    language\n  )\n  const carouselHtml = await import(\n    `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/${path}/embla-carousel.html`\n  )\n  const slideHTML = await import(\n    `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/${path}/slide.html`\n  )\n  const carouselScript = await import(\n    `!!raw-loader!components/Sandbox/Vanilla/SandboxFilesDist/${path}/EmblaCarousel.${vanillaScriptExtension}`\n  )\n  const carouselScriptWithFeatures = sandboxGeneratorToggleFeatures(\n    carouselScript,\n    settings\n  )\n  const moduleScripts: SandboxModuleScriptType[] =\n    await sandboxStaticExtractVanillaModules(\n      language,\n      carouselScriptWithFeatures,\n      path\n    )\n\n  return createSandboxVanilla({\n    id: settings.id,\n    language,\n    options: sandboxGeneratorCreateOptions(settings),\n    styles: sandboxGeneratorCreateStyles(settings),\n    carouselScript: carouselScriptWithFeatures,\n    plugins: sandboxStaticExtractPlugins(carouselScriptWithFeatures),\n    carouselHtml: createSandboxVanillaSlidesHtml(\n      settings,\n      slideHTML,\n      sandboxGeneratorToggleFeatures(carouselHtml, settings)\n    ),\n    sandboxOverrides: {\n      ...moduleScripts.reduce((allModules, moduleScript) => {\n        const moduleScriptWithFeatures = sandboxGeneratorToggleFeatures(\n          moduleScript.script,\n          settings\n        )\n\n        return {\n          ...allModules,\n          [`${SANDBOX_VANILLA_FOLDERS.JS}/${moduleScript.name}.${vanillaScriptExtension}`]:\n            {\n              isBinary: false,\n              content: formatScript(moduleScriptWithFeatures)\n            }\n        }\n      }, {})\n    }\n  })\n}\n\nconst sandboxReact = async (\n  settings: SandboxGeneratorSettingsType = DEFAULT_SETTINGS,\n  language: SandboxLanguageType,\n  path: string = 'CarouselGenerator'\n): Promise<string> => {\n  const { reactScriptExtension, formatScript } = await sandboxLanguageUtils(\n    language\n  )\n  const carouselScript: SandboxModuleType = await import(\n    `!!raw-loader!components/Sandbox/React/SandboxFilesDist/${path}/EmblaCarousel.${reactScriptExtension}`\n  )\n  const carouselScriptWithFeatures = sandboxGeneratorToggleFeatures(\n    carouselScript,\n    settings\n  )\n  const moduleScripts: SandboxModuleScriptType[] =\n    await sandboxStaticExtractReactModules(\n      language,\n      carouselScriptWithFeatures,\n      path\n    )\n\n  return createSandboxReact({\n    id: settings.id,\n    language,\n    slides: settings.slideList,\n    options: sandboxGeneratorCreateOptions(settings),\n    styles: sandboxGeneratorCreateStyles(settings),\n    carouselScript: carouselScriptWithFeatures,\n    plugins: sandboxStaticExtractPlugins(carouselScriptWithFeatures),\n    sandboxOverrides: {\n      ...moduleScripts.reduce((allModules, moduleScript) => {\n        const moduleScriptWithFeatures = sandboxGeneratorToggleFeatures(\n          moduleScript.script,\n          settings\n        )\n\n        return {\n          ...allModules,\n          [`${SANDBOX_REACT_FOLDERS.JS}/${moduleScript.name}.${reactScriptExtension}`]:\n            {\n              isBinary: false,\n              content: formatScript(moduleScriptWithFeatures)\n            }\n        }\n      }, {})\n    }\n  })\n}\n\nexport const staticGeneratorSandboxes = (\n  settings?: SandboxGeneratorSettingsType\n): SandboxSelectionType[] =>\n  createSandboxFunctionsWithLabels({\n    VANILLA_JS: () => sandboxVanilla(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    VANILLA_TS: () => sandboxVanilla(settings, SANDBOX_LANGUAGES.TYPESCRIPT),\n    REACT_JS: () => sandboxReact(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    REACT_TS: () => sandboxReact(settings, SANDBOX_LANGUAGES.TYPESCRIPT)\n  })\n\nexport const dynamicGeneratorSandboxes: SandboxSelectionType<SandboxGeneratorSettingsType>[] =\n  createSandboxFunctionsWithLabels({\n    VANILLA_JS: (settings?: SandboxGeneratorSettingsType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    VANILLA_TS: (settings?: SandboxGeneratorSettingsType) =>\n      sandboxVanilla(settings, SANDBOX_LANGUAGES.TYPESCRIPT),\n    REACT_JS: (settings?: SandboxGeneratorSettingsType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.JAVASCRIPT),\n    REACT_TS: (settings?: SandboxGeneratorSettingsType) =>\n      sandboxReact(settings, SANDBOX_LANGUAGES.TYPESCRIPT)\n  })\n","import { FlattenSimpleInterpolation } from 'styled-components'\nimport { styledComponentsStylesToString } from 'utils/styledComponentStylesToString'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport {\n  examplesCarouselDefaultStyles,\n  SLIDE_NUMBER_STYLES,\n  CONTROLS_STYLES,\n  ARROWS_STYLES,\n  DOTS_STYLES\n} from 'components/Examples/examplesCarouselStyles'\n\nexport const sandboxGeneratorCreateStyles = (\n  settings: SandboxGeneratorSettingsType\n): string => {\n  const {\n    navigationPrevNextButtons,\n    navigationDots,\n    slideSize,\n    slideGapSize,\n    axis,\n    styles\n  } = settings\n\n  if (styles) return styles\n\n  const styleList: FlattenSimpleInterpolation[] = [SLIDE_NUMBER_STYLES]\n  const hasControls = navigationPrevNextButtons || navigationDots\n\n  if (hasControls) styleList.push(CONTROLS_STYLES)\n  if (navigationPrevNextButtons) styleList.push(ARROWS_STYLES)\n  if (navigationDots) styleList.push(DOTS_STYLES)\n\n  return examplesCarouselDefaultStyles(\n    `${slideSize}%`,\n    `${parseFloat(slideGapSize) / 10}rem`,\n    axis,\n    styledComponentsStylesToString(...styleList)\n  )\n}\n","import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  delay: number\n  jump: boolean\n  playOnInit: boolean\n  stopOnFocusIn: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  stopOnLastSnap: boolean\n  rootNode: ((emblaRoot: HTMLElement) => HTMLElement | null) | null\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null\n}\n","import { OptionsType, defaultOptions } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport { OptionsHandlerType } from 'embla-carousel/components/OptionsHandler'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoplay?: AutoplayType\n  }\n}\n\ndeclare module 'embla-carousel/components/EventHandler' {\n  interface EmblaEventListType {\n    autoplayPlay: 'autoplay:play'\n    autoplayStop: 'autoplay:stop'\n  }\n}\n\nexport type AutoplayType = CreatePluginType<\n  {\n    play: (jump?: boolean) => void\n    stop: () => void\n    reset: () => void\n    isPlaying: () => boolean\n  },\n  OptionsType\n>\n\nexport type AutoplayOptionsType = AutoplayType['options']\n\nfunction Autoplay(userOptions: AutoplayOptionsType = {}): AutoplayType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let destroyed: boolean\n  let playing = false\n  let resume = true\n  let jump = false\n  let timer = 0\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, Autoplay.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    if (emblaApi.scrollSnapList().length <= 1) return\n\n    jump = options.jump\n    destroyed = false\n\n    const { eventStore, ownerDocument } = emblaApi.internalEngine()\n    const emblaRoot = emblaApi.rootNode()\n    const root = (options.rootNode && options.rootNode(emblaRoot)) || emblaRoot\n    const container = emblaApi.containerNode()\n\n    emblaApi.on('pointerDown', stopTimer)\n\n    if (!options.stopOnInteraction) {\n      emblaApi.on('pointerUp', startTimer)\n    }\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', () => {\n        resume = false\n        stopTimer()\n      })\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(root, 'mouseleave', () => {\n          resume = true\n          startTimer()\n        })\n      }\n    }\n\n    if (options.stopOnFocusIn) {\n      eventStore.add(container, 'focusin', stopTimer)\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(container, 'focusout', startTimer)\n      }\n    }\n\n    eventStore.add(ownerDocument, 'visibilitychange', visibilityChange)\n\n    if (options.playOnInit && !documentIsHidden()) startTimer()\n  }\n\n  function destroy(): void {\n    emblaApi.off('pointerDown', stopTimer).off('pointerUp', startTimer)\n    stopTimer()\n    destroyed = true\n    playing = false\n  }\n\n  function startTimer(): void {\n    if (destroyed) return\n    if (!resume) return\n    if (!playing) emblaApi.emit('autoplay:play')\n    const { ownerWindow } = emblaApi.internalEngine()\n    ownerWindow.clearInterval(timer)\n    timer = ownerWindow.setInterval(next, options.delay)\n    playing = true\n  }\n\n  function stopTimer(): void {\n    if (destroyed) return\n    if (playing) emblaApi.emit('autoplay:stop')\n    const { ownerWindow } = emblaApi.internalEngine()\n    ownerWindow.clearInterval(timer)\n    timer = 0\n    playing = false\n  }\n\n  function visibilityChange(): void {\n    if (documentIsHidden()) {\n      resume = playing\n      return stopTimer()\n    }\n\n    if (resume) startTimer()\n  }\n\n  function documentIsHidden(): boolean {\n    const { ownerDocument } = emblaApi.internalEngine()\n    return ownerDocument.visibilityState === 'hidden'\n  }\n\n  function play(jumpOverride?: boolean): void {\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride\n    resume = true\n    startTimer()\n  }\n\n  function stop(): void {\n    if (playing) stopTimer()\n  }\n\n  function reset(): void {\n    if (playing) play()\n  }\n\n  function isPlaying(): boolean {\n    return playing\n  }\n\n  function next(): void {\n    const { index } = emblaApi.internalEngine()\n    const nextIndex = index.clone().add(1).get()\n    const lastIndex = emblaApi.scrollSnapList().length - 1\n    const kill = options.stopOnLastSnap && nextIndex === lastIndex\n\n    if (kill) stopTimer()\n\n    if (emblaApi.canScrollNext()) {\n      emblaApi.scrollNext(jump)\n    } else {\n      emblaApi.scrollTo(0, jump)\n    }\n  }\n\n  const self: AutoplayType = {\n    name: 'autoplay',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  }\n  return self\n}\n\nAutoplay.globalOptions = <AutoplayOptionsType | undefined>undefined\n\nexport default Autoplay\n","export function removeClass(node: HTMLElement, className: string): void {\n  if (!node || !className) return\n  const { classList } = node\n  if (classList.contains(className)) classList.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  if (!node || !className) return\n  const { classList } = node\n  if (!classList.contains(className)) classList.add(className)\n}\n\nexport function nodeListToArray(nodeList: NodeListOf<Element>): HTMLElement[] {\n  return <HTMLElement[]>Array.from(nodeList)\n}\n","import { defaultOptions, OptionsType } from './Options'\nimport { nodeListToArray, addClass, removeClass } from './utils'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\nimport { OptionsHandlerType } from 'embla-carousel/components/OptionsHandler'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    classNames?: ClassNamesType\n  }\n}\n\nexport type ClassNamesType = CreatePluginType<{}, OptionsType>\n\nexport type ClassNamesOptionsType = ClassNamesType['options']\n\nfunction ClassNames(userOptions: ClassNamesOptionsType = {}): ClassNamesType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let root: HTMLElement\n  let slides: HTMLElement[]\n  const selectedEvents: EmblaEventType[] = ['select']\n  const draggingEvents: EmblaEventType[] = ['pointerDown', 'pointerUp']\n  const inViewEvents: EmblaEventType[] = ['slidesInView']\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, ClassNames.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    root = emblaApi.rootNode()\n    slides = emblaApi.slideNodes()\n    const isDraggable = !!emblaApi.internalEngine().options.watchDrag\n\n    if (isDraggable) {\n      addClass(root, options.draggable)\n    }\n    if (options.dragging) {\n      draggingEvents.forEach((evt) => emblaApi.on(evt, toggleDraggingClass))\n    }\n    if (options.snapped) {\n      selectedEvents.forEach((evt) => emblaApi.on(evt, toggleSnappedClasses))\n      toggleSnappedClasses()\n    }\n    if (options.inView) {\n      inViewEvents.forEach((evt) => emblaApi.on(evt, toggleInViewClasses))\n      toggleInViewClasses()\n    }\n  }\n\n  function destroy(): void {\n    removeClass(root, options.draggable)\n    draggingEvents.forEach((evt) => emblaApi.off(evt, toggleDraggingClass))\n    selectedEvents.forEach((evt) => emblaApi.off(evt, toggleSnappedClasses))\n    inViewEvents.forEach((evt) => emblaApi.off(evt, toggleInViewClasses))\n    slides.forEach((slide) => removeClass(slide, options.snapped))\n  }\n\n  function toggleDraggingClass(\n    _: EmblaCarouselType,\n    evt: EmblaEventType\n  ): void {\n    if (evt === 'pointerDown') addClass(root, options.dragging)\n    else removeClass(root, options.dragging)\n  }\n\n  function toggleSlideClasses(slideIndexes: number[], className: string): void {\n    const container = emblaApi.containerNode()\n    const slideNodeList = container.querySelectorAll(`.${className}`)\n    const removeClassSlides = nodeListToArray(slideNodeList)\n\n    removeClassSlides.forEach((slide) => removeClass(slide, className))\n    slideIndexes.forEach((index) => addClass(slides[index], className))\n  }\n\n  function toggleSnappedClasses(): void {\n    const { slideRegistry } = emblaApi.internalEngine()\n    const slideIndexes = slideRegistry[emblaApi.selectedScrollSnap()]\n    toggleSlideClasses(slideIndexes, options.snapped)\n  }\n\n  function toggleInViewClasses(): void {\n    const slideIndexes = emblaApi.slidesInView()\n    toggleSlideClasses(slideIndexes, options.inView)\n  }\n\n  const self: ClassNamesType = {\n    name: 'classNames',\n    options: userOptions,\n    init,\n    destroy\n  }\n  return self\n}\n\nClassNames.globalOptions = <ClassNamesOptionsType | undefined>undefined\n\nexport default ClassNames\n","var map = {\n\t\"./CarouselGenerator/embla-carousel.html\": [\n\t\t7673,\n\t\t7673\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 5911;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./CarouselGenerator/slide.html\": [\n\t\t2548,\n\t\t2548\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 8778;\nmodule.exports = webpackAsyncContext;"],"names":["CONTEXT_DEFAULT_VALUE","formData","align","axis","container","slides","containScroll","direction","slidesToScroll","inViewThreshold","breakpoints","dragFree","dragThreshold","loop","skipSnaps","duration","startIndex","active","watchDrag","watchResize","watchSlides","id","framework","slideList","arrayFromNumber","accessibility","slideSize","slideGapSize","edgeGap","styles","navigationPrevNextButtons","navigationDots","selectedSnapDisplay","autoplay","classNames","wheelGestures","onChange","onCheckboxChange","onRadioChange","onNumberChange","onNumberBlur","CarouselGeneratorContext","createContext","CarouselGeneratorProvider","props","children","setFormData","useState","useCallback","key","value","currentFormValues","event","name","checked","currentTarget","input","fieldName","minValue","parseInt","getAttribute","maxValue","number","parseFloat","min","max","Math","numberWithinRange","toString","useMemo","React","Provider","DotButton","restProps","Object","assign","type","PrevButton","isRightToLeft","isVertical","className","viewBox","fill","d","NextButton","SelectedSnapDisplay","selectedSnap","snapCount","SandboxGeneratorExample","options","emblaRef","emblaApi","useEmblaCarousel","concat","_toConsumableArray","Autoplay","ClassNames","onButtonClick","plugins","stopOnInteraction","stop","selectedIndex","scrollSnaps","onDotButtonClick","useDotButton","setSelectedIndex","setScrollSnaps","index","scrollTo","onInit","scrollSnapList","onSelect","selectedScrollSnap","useEffect","on","prevBtnDisabled","nextBtnDisabled","onPrevButtonClick","onNextButtonClick","usePrevNextButtons","setPrevBtnDisabled","setNextBtnDisabled","scrollPrev","scrollNext","canScrollPrev","canScrollNext","setSelectedSnap","setSnapCount","updateScrollSnapState","length","useSelectedSnapDisplay","dir","undefined","ref","map","onClick","disabled","_","START","END","MIDDLE","sandboxGeneratorToggleFeature","featureLabel","featureActive","carouselScript","regexString","regex","RegExp","replace","sandboxGeneratorToggleFeatures","settings","carouselScriptWithFeatures","default","hasNavigation","hasAutoplayAndNavigation","isHorizontal","isLeftToRight","sandboxGeneratorCreateOptions","SANDBOX_SLIDE_NR_REGEX","SANDBOX_SLIDES","createSandboxVanillaSlidesHtml","slideHTML","carouselHtml","slidesHtml","slideNumber","join","DEFAULT_SETTINGS","sandboxVanilla","async","language","path","vanillaScriptExtension","formatScript","sandboxLanguageUtils","moduleScripts","sandboxStaticExtractVanillaModules","createSandboxVanilla","sandboxGeneratorCreateStyles","sandboxStaticExtractPlugins","sandboxOverrides","reduce","allModules","moduleScript","moduleScriptWithFeatures","script","SANDBOX_VANILLA_FOLDERS","JS","isBinary","content","sandboxReact","reactScriptExtension","sandboxStaticExtractReactModules","createSandboxReact","SANDBOX_REACT_FOLDERS","staticGeneratorSandboxes","createSandboxFunctionsWithLabels","VANILLA_JS","SANDBOX_LANGUAGES","JAVASCRIPT","VANILLA_TS","TYPESCRIPT","REACT_JS","REACT_TS","dynamicGeneratorSandboxes","styleList","SLIDE_NUMBER_STYLES","push","CONTROLS_STYLES","ARROWS_STYLES","DOTS_STYLES","examplesCarouselDefaultStyles","styledComponentsStylesToString","apply","defaultOptions","delay","jump","playOnInit","stopOnFocusIn","stopOnMouseEnter","stopOnLastSnap","rootNode","userOptions","destroyed","playing","resume","timer","startTimer","emit","ownerWindow","internalEngine","clearInterval","setInterval","next","stopTimer","visibilityChange","documentIsHidden","ownerDocument","visibilityState","play","jumpOverride","nextIndex","clone","add","get","lastIndex","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","eventStore","emblaRoot","root","containerNode","destroy","off","reset","isPlaying","snapped","inView","draggable","dragging","removeClass","node","classList","contains","remove","addClass","selectedEvents","draggingEvents","inViewEvents","toggleDraggingClass","evt","toggleSlideClasses","slideIndexes","slideNodeList","querySelectorAll","nodeList","Array","from","forEach","slide","toggleSnappedClasses","slideRegistry","toggleInViewClasses","slidesInView","slideNodes","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","module","exports"],"sourceRoot":""}