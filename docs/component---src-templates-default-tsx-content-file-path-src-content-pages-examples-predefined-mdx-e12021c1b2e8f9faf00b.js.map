{"version":3,"file":"component---src-templates-default-tsx-content-file-path-src-content-pages-examples-predefined-mdx-e12021c1b2e8f9faf00b.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/components/Examples/Basic/Default.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/Loop.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/RightToLeft.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/SlidesToScroll.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/DragFree.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/Align.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/VariableWidths.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/YAxis.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/SlidesPerView.tsx","webpack://embla-carousel-docs/./src/components/Examples/Basic/Thumbs.tsx","webpack://embla-carousel-docs/./src/components/Examples/Tween/Parallax.tsx","webpack://embla-carousel-docs/./src/components/Examples/Tween/Scale.tsx","webpack://embla-carousel-docs/./src/components/Examples/Tween/Opacity.tsx","webpack://embla-carousel-docs/./src/components/Examples/Miscellaneous/Progress.tsx","webpack://embla-carousel-docs/./src/components/Examples/Miscellaneous/LazyLoad.tsx","webpack://embla-carousel-docs/./src/components/Examples/Miscellaneous/InfiniteScroll.tsx","webpack://embla-carousel-docs/./src/components/Examples/Miscellaneous/IosPicker.tsx","webpack://embla-carousel-docs/./src/content/pages/examples/predefined.mdx","webpack://embla-carousel-docs/./src/templates/Default.tsx","webpack://embla-carousel-docs/./src/components/Examples/Plugins/AutoHeight.tsx","webpack://embla-carousel-docs/./src/components/Examples/Plugins/AutoScroll.tsx","webpack://embla-carousel-docs/./src/components/Examples/Plugins/Autoplay.tsx","webpack://embla-carousel-docs/./src/components/Examples/Plugins/ClassNames.tsx","webpack://embla-carousel-docs/../src/components/Options.ts","webpack://embla-carousel-docs/../src/components/AutoHeight.ts","webpack://embla-carousel-docs/./src/components/Sandbox/React/SandboxFilesSrc/AutoHeight/EmblaCarousel.tsx","webpack://embla-carousel-docs/../src/components/AutoScroll.ts","webpack://embla-carousel-docs/./src/components/Sandbox/React/SandboxFilesSrc/AutoScroll/EmblaCarousel.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/React/SandboxFilesSrc/Autoplay/EmblaCarousel.tsx","webpack://embla-carousel-docs/./src/components/Sandbox/React/SandboxFilesSrc/ClassNames/EmblaCarousel.tsx"],"sourcesContent":["import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-default'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = {}\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  navigationDots: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const Default = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-loop'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { loop: true }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideSize: '70',\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  navigationDots: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const Loop = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-right-to-left'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { direction: 'rtl' }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  navigationDots: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const RightToLeft = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-slides-to-scroll'\nconst SLIDES = arrayFromNumber(10)\nconst OPTIONS: EmblaOptionsType = { slidesToScroll: 'auto' }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideSize: '50',\n  slideList: SLIDES,\n  navigationDots: true,\n  navigationPrevNextButtons: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\nexport const SlidesToScroll = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { examplesCarouselDragFreeStyles } from '../examplesCarouselStyles'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-drag-free'\nconst SLIDES = arrayFromNumber(16)\nconst OPTIONS: EmblaOptionsType = { dragFree: true }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  slideSize: '50',\n  navigationPrevNextButtons: true,\n  selectedSnapDisplay: true,\n  styles: examplesCarouselDragFreeStyles('50%')\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const DragFree = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            selectedSnapDisplay\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-default'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { containScroll: false }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideSize: '70',\n  slideList: SLIDES,\n  navigationDots: true,\n  navigationPrevNextButtons: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const Align = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { examplesCarouselVariableWidthStyles } from '../examplesCarouselStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-variable-widths'\nconst SLIDES = arrayFromNumber(9)\nconst OPTIONS: EmblaOptionsType = {}\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  selectedSnapDisplay: true,\n  styles: examplesCarouselVariableWidthStyles()\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const VariableWidths = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            selectedSnapDisplay\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-y-axis'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { axis: 'y' }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  navigationDots: true\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const YAxis = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { CONTEXT_DEFAULT_VALUE } from 'components/CarouselGenerator/CarouselGeneratorContext'\nimport { sandboxGeneratorCreateStyles } from 'components/Sandbox/sandboxGeneratorCreateStyles'\nimport { staticGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { examplesCarouselSlidesPerViewStyles } from '../examplesCarouselStyles'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-slides-per-view'\nconst SLIDES = arrayFromNumber(6)\nconst OPTIONS: EmblaOptionsType = { align: 'start' }\n\nconst SANDBOX_SETTINGS: SandboxGeneratorSettingsType = {\n  ...CONTEXT_DEFAULT_VALUE.formData,\n  ...OPTIONS,\n  id: ID,\n  slideList: SLIDES,\n  navigationPrevNextButtons: true,\n  navigationDots: true,\n  styles: examplesCarouselSlidesPerViewStyles()\n}\n\nconst SANDBOXES = staticGeneratorSandboxes(SANDBOX_SETTINGS)\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${sandboxGeneratorCreateStyles(SANDBOX_SETTINGS)};\n  }\n`\n\nexport const SlidesPerView = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <SandboxGeneratorExample\n            slides={SLIDES}\n            options={OPTIONS}\n            navigationPrevNextButtons\n            navigationDots\n          />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselThumbs from 'components/Sandbox/React/SandboxFilesSrc/Thumbs/EmblaCarousel'\nimport { examplesThumbsWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselThumbsStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-thumbs'\nconst SLIDES = arrayFromNumber(10)\nconst OPTIONS: EmblaOptionsType = {}\nconst STYLES = examplesCarouselThumbsStyles()\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Thumbs')\n\nconst Wrapper = styled.div`\n  ${examplesThumbsWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Thumbs = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselThumbs slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselParallax from 'components/Sandbox/React/SandboxFilesSrc/Parallax/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselParallaxStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-parallax'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { dragFree: true, loop: true }\nconst STYLES = examplesCarouselParallaxStyles('80%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Parallax')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Parallax = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselParallax slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselScale from 'components/Sandbox/React/SandboxFilesSrc/Scale/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselScaleStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-scale'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { loop: true }\nconst STYLES = examplesCarouselScaleStyles('55%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Scale')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Scale = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselScale slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselOpacity from 'components/Sandbox/React/SandboxFilesSrc/Opacity/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselOpacityStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-opacity'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { loop: true }\nconst STYLES = examplesCarouselOpacityStyles('70%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Opacity')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Opacity = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselOpacity slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselProgress from 'components/Sandbox/React/SandboxFilesSrc/Progress/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselProgressStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-progress'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { dragFree: true }\nconst STYLES = examplesCarouselProgressStyles('65%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Progress')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Progress = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselProgress slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselLazyLoad from 'components/Sandbox/React/SandboxFilesSrc/LazyLoad/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselLazyLoadStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-lazy-load'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = {}\nconst STYLES = examplesCarouselLazyLoadStyles()\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'LazyLoad')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const LazyLoad = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselLazyLoad slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselInfiniteScroll from 'components/Sandbox/React/SandboxFilesSrc/InfiniteScroll/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselInfiniteScrollStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-infinite-scroll'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = {\n  dragFree: true,\n  containScroll: 'keepSnaps',\n  watchSlides: false,\n  watchResize: false\n}\nconst STYLES = examplesCarouselInfiniteScrollStyles()\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'InfiniteScroll')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const InfiniteScroll = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <CarouselInfiniteScroll slides={SLIDES} options={OPTIONS} />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselIosPicker from 'components/Sandbox/React/SandboxFilesSrc/IosPicker/EmblaCarousel'\nimport { examplesIosPickerWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselIosPickerStyles } from 'components/Examples/examplesCarouselStyles'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-ios-style-picker'\nconst STYLES = examplesCarouselIosPickerStyles()\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: [],\n  options: {},\n  styles: STYLES\n}\nconst SANDBOX_LOOP_CONFIG: SandboxStaticSettingsType = {\n  ...SANDBOX_CONFIG,\n  options: { loop: true }\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'IosPicker')\nconst SANDBOXES_LOOP = sandboxStaticSandboxes(SANDBOX_LOOP_CONFIG, 'IosPicker')\n\nconst Wrapper = styled.div`\n  ${examplesIosPickerWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\ntype PropType = {\n  loop: EmblaOptionsType['loop']\n}\n\nexport const IosPicker = (props: PropType) => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n  const { loop } = props\n\n  return (\n    <>\n      <SandboxSelection sandboxes={loop ? SANDBOXES_LOOP : SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselIosPicker loop={loop} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/*Basic*/\n/*Plugins*/\n/*Tween*/\n/*Miscellaneous*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Default} from 'components/Examples/Basic/Default';\nimport {Loop} from 'components/Examples/Basic/Loop';\nimport {RightToLeft} from 'components/Examples/Basic/RightToLeft';\nimport {SlidesToScroll} from 'components/Examples/Basic/SlidesToScroll';\nimport {DragFree} from 'components/Examples/Basic/DragFree';\nimport {Align} from 'components/Examples/Basic/Align';\nimport {VariableWidths} from 'components/Examples/Basic/VariableWidths';\nimport {YAxis} from 'components/Examples/Basic/YAxis';\nimport {SlidesPerView} from 'components/Examples/Basic/SlidesPerView';\nimport {Thumbs} from 'components/Examples/Basic/Thumbs';\nimport {Autoplay} from 'components/Examples/Plugins/Autoplay';\nimport {AutoScroll} from 'components/Examples/Plugins/AutoScroll';\nimport {AutoHeight} from 'components/Examples/Plugins/AutoHeight';\nimport {ClassNames} from 'components/Examples/Plugins/ClassNames';\nimport {Parallax} from 'components/Examples/Tween/Parallax';\nimport {Scale} from 'components/Examples/Tween/Scale';\nimport {Opacity} from 'components/Examples/Tween/Opacity';\nimport {Progress} from 'components/Examples/Miscellaneous/Progress';\nimport {LazyLoad} from 'components/Examples/Miscellaneous/LazyLoad';\nimport {InfiniteScroll} from 'components/Examples/Miscellaneous/InfiniteScroll';\nimport {IosPicker} from 'components/Examples/Miscellaneous/IosPicker';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    hr: \"hr\",\n    h2: \"h2\",\n    span: \"span\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, \"\\n\", \"\\n\", \"\\n\", \"\\n\", \"\\n\", \"\\n\", \"\\n\", \"\\n\", React.createElement(_components.h1, null, \"Predefined Examples\"), \"\\n\", React.createElement(_components.p, null, \"Get started instantly with pre-made CodeSandboxes or customize your carousel with the \", React.createElement(_components.a, {\n    href: \"/examples/generator\"\n  }, \"carousel generator\"), \".\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-examples\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-examples\",\n    \"aria-label\": \"basic examples permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Basic Examples\"), \"\\n\", React.createElement(_components.p, null, \"Basic carousel setups that require minimal effort to get started with.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"default\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#default\",\n    \"aria-label\": \"default permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Default\"), \"\\n\", React.createElement(Default), \"\\n\", React.createElement(_components.h3, {\n    id: \"loop\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#loop\",\n    \"aria-label\": \"loop permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Loop\"), \"\\n\", React.createElement(Loop), \"\\n\", React.createElement(_components.h3, {\n    id: \"right-to-left\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#right-to-left\",\n    \"aria-label\": \"right to left permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Right To Left\"), \"\\n\", React.createElement(RightToLeft), \"\\n\", React.createElement(_components.h3, {\n    id: \"slides-to-scroll\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slides-to-scroll\",\n    \"aria-label\": \"slides to scroll permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slides To Scroll\"), \"\\n\", React.createElement(SlidesToScroll), \"\\n\", React.createElement(_components.h3, {\n    id: \"drag-free\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#drag-free\",\n    \"aria-label\": \"drag free permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Drag Free\"), \"\\n\", React.createElement(DragFree), \"\\n\", React.createElement(_components.h3, {\n    id: \"align\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#align\",\n    \"aria-label\": \"align permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Align\"), \"\\n\", React.createElement(Align), \"\\n\", React.createElement(_components.h3, {\n    id: \"variable-widths\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#variable-widths\",\n    \"aria-label\": \"variable widths permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Variable Widths\"), \"\\n\", React.createElement(VariableWidths), \"\\n\", React.createElement(_components.h3, {\n    id: \"y-axis\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#y-axis\",\n    \"aria-label\": \"y axis permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Y-axis\"), \"\\n\", React.createElement(YAxis), \"\\n\", React.createElement(_components.h3, {\n    id: \"slides-per-view\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slides-per-view\",\n    \"aria-label\": \"slides per view permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slides Per View\"), \"\\n\", React.createElement(SlidesPerView), \"\\n\", React.createElement(_components.h3, {\n    id: \"thumbnails\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#thumbnails\",\n    \"aria-label\": \"thumbnails permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Thumbnails\"), \"\\n\", React.createElement(Thumbs), \"\\n\", React.createElement(_components.h2, {\n    id: \"plugin-examples\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#plugin-examples\",\n    \"aria-label\": \"plugin examples permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Plugin Examples\"), \"\\n\", React.createElement(_components.p, null, \"Extend your carousels with \", React.createElement(_components.a, {\n    href: \"/plugins/\"\n  }, \"plugins\"), \" and easily add features.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"autoplay\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#autoplay\",\n    \"aria-label\": \"autoplay permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Autoplay\"), \"\\n\", React.createElement(Autoplay), \"\\n\", React.createElement(_components.h3, {\n    id: \"auto-scroll\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#auto-scroll\",\n    \"aria-label\": \"auto scroll permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Auto Scroll\"), \"\\n\", React.createElement(AutoScroll), \"\\n\", React.createElement(_components.h3, {\n    id: \"auto-height\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#auto-height\",\n    \"aria-label\": \"auto height permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Auto Height\"), \"\\n\", React.createElement(AutoHeight), \"\\n\", React.createElement(_components.h3, {\n    id: \"class-names\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#class-names\",\n    \"aria-label\": \"class names permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Class Names\"), \"\\n\", React.createElement(ClassNames), \"\\n\", React.createElement(_components.h2, {\n    id: \"tween-examples\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#tween-examples\",\n    \"aria-label\": \"tween examples permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Tween Examples\"), \"\\n\", React.createElement(_components.p, null, \"Tween styles on your slides as the carousel scrolls.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"parallax\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#parallax\",\n    \"aria-label\": \"parallax permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Parallax\"), \"\\n\", React.createElement(Parallax), \"\\n\", React.createElement(_components.h3, {\n    id: \"scale\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#scale\",\n    \"aria-label\": \"scale permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Scale\"), \"\\n\", React.createElement(Scale), \"\\n\", React.createElement(_components.h3, {\n    id: \"opacity\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#opacity\",\n    \"aria-label\": \"opacity permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Opacity\"), \"\\n\", React.createElement(Opacity), \"\\n\", React.createElement(_components.h2, {\n    id: \"miscellaneous-examples\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#miscellaneous-examples\",\n    \"aria-label\": \"miscellaneous examples permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Miscellaneous Examples\"), \"\\n\", React.createElement(_components.p, null, \"Add features using the \", React.createElement(_components.a, {\n    href: \"/api/\"\n  }, \"API\"), \" and the internal engine.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"progress\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#progress\",\n    \"aria-label\": \"progress permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Progress\"), \"\\n\", React.createElement(Progress), \"\\n\", React.createElement(_components.h3, {\n    id: \"lazy-load\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#lazy-load\",\n    \"aria-label\": \"lazy load permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Lazy Load\"), \"\\n\", React.createElement(LazyLoad), \"\\n\", React.createElement(_components.h3, {\n    id: \"infinite-scroll\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#infinite-scroll\",\n    \"aria-label\": \"infinite scroll permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Infinite Scroll\"), \"\\n\", React.createElement(InfiniteScroll), \"\\n\", React.createElement(_components.h3, {\n    id: \"ios-style-picker-default\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ios-style-picker-default\",\n    \"aria-label\": \"ios style picker default permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"IOS Style Picker Default\"), \"\\n\", React.createElement(IosPicker, {\n    loop: false\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"ios-style-picker-loop\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ios-style-picker-loop\",\n    \"aria-label\": \"ios style picker loop permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"IOS Style Picker Loop\"), \"\\n\", React.createElement(IosPicker, {\n    loop: true\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/examples/predefined.mdx\";\nimport React, {useMemo} from 'react';\nimport {Seo} from 'components/Seo/Seo';\nimport maskable from 'assets/images/maskable.png';\nimport {useSiteMetadata} from 'hooks/useSiteMetadata';\nimport {PageEditThisPage} from 'components/Page/PageEditThisPage';\nimport {PagePagination} from 'components/Page/PagePagination';\nimport {PageBreadcrumbs} from 'components/Page/PageBreadcrumbs';\nimport {MAIN_CONTENT_ID} from 'components/KeyNavigating/KeyNavigatingSkipToContent';\nimport {removeProtocol} from 'utils/removeProtocol';\nimport {Mdx} from 'components/Mdx/Mdx';\nconst query = \"2279002958\";\nexport const Head = props => {\n  const {data, pageContext} = props;\n  const {siteUrl, author} = useSiteMetadata();\n  const {title = '', description, date} = data.mdx.frontmatter;\n  const dateToISOString = useMemo(() => new Date(date + \" UTC\").toISOString(), [date]);\n  return React.createElement(Seo, {\n    title: title,\n    description: description,\n    url: \"\" + siteUrl + pageContext.slug\n  }, React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, \"\\n      {\\n        \\\"@context\\\": \\\"https://schema.org\\\",\\n        \\\"@type\\\": \\\"TechArticle\\\",\\n        \\\"name\\\": \\\"\" + removeProtocol(siteUrl) + \"\\\",\\n        \\\"description\\\": \\\"\" + description + \"\\\",\\n        \\\"url\\\": \\\"\" + siteUrl + pageContext.slug + \"\\\",\\n        \\\"headline\\\": \\\"\" + title + \"\\\",\\n        \\\"image\\\": \\\"\" + siteUrl + \"/share-image.png\\\",\\n        \\\"datePublished\\\": \\\"\" + dateToISOString + \"\\\",\\n        \\\"dateModified\\\": \\\"\" + dateToISOString + \"\\\",\\n        \\\"author\\\": {\\n          \\\"@type\\\": \\\"Person\\\",\\n          \\\"name\\\": \\\"\" + author + \"\\\"\\n        },\\n        \\\"publisher\\\": {\\n          \\\"@type\\\": \\\"Organization\\\",\\n          \\\"name\\\": \\\"\" + author + \"\\\",\\n          \\\"logo\\\": {\\n            \\\"@type\\\": \\\"ImageObject\\\",\\n            \\\"width\\\": \\\"512\\\",\\n            \\\"height\\\": \\\"512\\\",\\n            \\\"url\\\": \\\"\" + siteUrl + maskable + \"\\\"\\n          }\\n        }\\n      }\\n    \"));\n};\nconst PageDefault = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(PageBreadcrumbs, {\n    id: id\n  }), React.createElement(\"article\", {\n    id: MAIN_CONTENT_ID\n  }, React.createElement(Mdx, null, children)), React.createElement(PageEditThisPage, {\n    pageUrl: filePath\n  }), React.createElement(PagePagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPageDefault\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageDefault, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselAutoHeight from 'components/Sandbox/React/SandboxFilesSrc/AutoHeight/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselAutoHeightStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-auto-height'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = {}\nconst STYLES = examplesCarouselAutoHeightStyles()\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'AutoHeight')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const AutoHeight = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <CarouselAutoHeight slides={SLIDES} options={OPTIONS} />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselAutoScroll from 'components/Sandbox/React/SandboxFilesSrc/AutoScroll/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselAutoplayStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-auto-scroll'\nconst SLIDES = arrayFromNumber(8)\nconst OPTIONS: EmblaOptionsType = { loop: true }\nconst STYLES = examplesCarouselAutoplayStyles('45%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'AutoScroll')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const AutoScroll = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <CarouselAutoScroll slides={SLIDES} options={OPTIONS} />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselAutoplay from 'components/Sandbox/React/SandboxFilesSrc/Autoplay/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselAutoplayStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-autoplay'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = { loop: true }\nconst STYLES = examplesCarouselAutoplayStyles('70%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'Autoplay')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const Autoplay = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? <CarouselAutoplay slides={SLIDES} options={OPTIONS} /> : null}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport styled from 'styled-components'\nimport { useInView } from 'react-intersection-observer'\nimport CarouselClassNames from 'components/Sandbox/React/SandboxFilesSrc/ClassNames/EmblaCarousel'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport { examplesCarouselClassNamesStyles } from 'components/Examples/examplesCarouselStyles'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { SandboxSelection } from 'components/Sandbox/SandboxSelection'\nimport { sandboxStaticSandboxes } from 'components/Sandbox/sandboxStatic'\nimport { SandboxStaticSettingsType } from 'consts/sandbox'\nimport { EXAMPLES_INTERSECTION_OPTIONS } from 'consts/examples'\n\nconst ID = 'embla-carousel-class-names'\nconst SLIDES = arrayFromNumber(5)\nconst OPTIONS: EmblaOptionsType = {}\nconst STYLES = examplesCarouselClassNamesStyles('70%')\n\nconst SANDBOX_CONFIG: SandboxStaticSettingsType = {\n  id: ID,\n  slides: SLIDES,\n  options: OPTIONS,\n  styles: STYLES\n}\n\nconst SANDBOXES = sandboxStaticSandboxes(SANDBOX_CONFIG, 'ClassNames')\n\nconst Wrapper = styled.div`\n  ${examplesDefaultWrapperStyles};\n\n  &.${ID} {\n    ${STYLES};\n  }\n`\n\nexport const ClassNames = () => {\n  const [inViewRef, inView] = useInView(EXAMPLES_INTERSECTION_OPTIONS)\n\n  return (\n    <>\n      <SandboxSelection sandboxes={SANDBOXES} />\n      <Wrapper className={ID} ref={inViewRef}>\n        {inView ? (\n          <CarouselClassNames slides={SLIDES} options={OPTIONS} />\n        ) : null}\n      </Wrapper>\n    </>\n  )\n}\n","import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  destroyHeight: CSSStyleDeclaration['height']\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  destroyHeight: 'auto'\n}\n","import { defaultOptions, OptionsType } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport { OptionsHandlerType } from 'embla-carousel/components/OptionsHandler'\nimport { EmblaCarouselType, EmblaEventType } from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoHeight?: AutoHeightType\n  }\n}\n\nexport type AutoHeightType = CreatePluginType<{}, OptionsType>\n\nexport type AutoHeightOptionsType = AutoHeightType['options']\n\nfunction AutoHeight(userOptions: AutoHeightOptionsType = {}): AutoHeightType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let slideHeights: number[] = []\n  const heightEvents: EmblaEventType[] = ['select']\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, AutoHeight.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    const {\n      options: { axis },\n      slideRects\n    } = emblaApi.internalEngine()\n\n    if (axis === 'y') return\n\n    slideHeights = slideRects.map((slideRect) => slideRect.height)\n\n    heightEvents.forEach((evt) => emblaApi.on(evt, setContainerHeight))\n    setContainerHeight()\n  }\n\n  function destroy(): void {\n    heightEvents.forEach((evt) => emblaApi.off(evt, setContainerHeight))\n    setContainerHeight(undefined, 'destroy')\n  }\n\n  function highestInView(): number {\n    const { slideRegistry } = emblaApi.internalEngine()\n    const selectedIndexes = slideRegistry[emblaApi.selectedScrollSnap()]\n\n    return selectedIndexes\n      .map((index) => slideHeights[index])\n      .reduce((a, b) => Math.max(a, b), 0)\n  }\n\n  function setContainerHeight(\n    _?: EmblaCarouselType,\n    evt?: EmblaEventType\n  ): void {\n    const height =\n      evt === 'destroy' ? options.destroyHeight : `${highestInView()}px`\n    emblaApi.containerNode().style.height = height\n  }\n\n  const self: AutoHeightType = {\n    name: 'autoHeight',\n    options: userOptions,\n    init,\n    destroy\n  }\n  return self\n}\n\nAutoHeight.globalOptions = <AutoHeightOptionsType | undefined>undefined\n\nexport default AutoHeight\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport AutoHeight from 'embla-carousel-auto-height'\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons\n} from '../EmblaCarouselArrowButtons'\nimport { DotButton, useDotButton } from '../EmblaCarouselDotButton'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [AutoHeight()])\n\n  const { selectedIndex, scrollSnaps, onDotButtonClick } =\n    useDotButton(emblaApi)\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi)\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton onClick={onPrevButtonClick} disabled={prevBtnDisabled} />\n          <NextButton onClick={onNextButtonClick} disabled={nextBtnDisabled} />\n        </div>\n\n        <div className=\"embla__dots\">\n          {scrollSnaps.map((_, index) => (\n            <DotButton\n              key={index}\n              onClick={() => onDotButtonClick(index)}\n              className={'embla__dot'.concat(\n                index === selectedIndex ? ' embla__dot--selected' : ''\n              )}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n","import { OptionsType, defaultOptions } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport { OptionsHandlerType } from 'embla-carousel/components/OptionsHandler'\nimport { EmblaCarouselType } from 'embla-carousel'\nimport { EngineType } from 'embla-carousel/components/Engine'\nimport { ScrollBodyType } from 'embla-carousel/components/ScrollBody'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoScroll?: AutoScrollType\n  }\n}\n\ndeclare module 'embla-carousel/components/EventHandler' {\n  interface EmblaEventListType {\n    autoScrollPlay: 'autoScroll:play'\n    autoScrollStop: 'autoScroll:stop'\n  }\n}\n\nexport type AutoScrollType = CreatePluginType<\n  {\n    play: (delay?: number) => void\n    stop: () => void\n    reset: () => void\n    isPlaying: () => boolean\n  },\n  OptionsType\n>\n\nexport type AutoScrollOptionsType = AutoScrollType['options']\n\nfunction AutoScroll(userOptions: AutoScrollOptionsType = {}): AutoScrollType {\n  let options: OptionsType\n  let emblaApi: EmblaCarouselType\n  let destroyed: boolean\n  let playing = false\n  let resume = true\n  let timer = 0\n  let startDelay: number\n  let defaultScrollBehaviour: ScrollBodyType\n\n  function init(\n    emblaApiInstance: EmblaCarouselType,\n    optionsHandler: OptionsHandlerType\n  ): void {\n    emblaApi = emblaApiInstance\n\n    const { mergeOptions, optionsAtMedia } = optionsHandler\n    const optionsBase = mergeOptions(defaultOptions, AutoScroll.globalOptions)\n    const allOptions = mergeOptions(optionsBase, userOptions)\n    options = optionsAtMedia(allOptions)\n\n    if (emblaApi.scrollSnapList().length <= 1) return\n\n    startDelay = options.startDelay\n    destroyed = false\n    defaultScrollBehaviour = emblaApi.internalEngine().scrollBody\n\n    const { eventStore } = emblaApi.internalEngine()\n    const emblaRoot = emblaApi.rootNode()\n    const root = (options.rootNode && options.rootNode(emblaRoot)) || emblaRoot\n    const container = emblaApi.containerNode()\n\n    emblaApi.on('pointerDown', stopScroll)\n\n    if (!options.stopOnInteraction) {\n      emblaApi.on('pointerUp', startScrollOnSettle)\n    }\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', () => {\n        resume = false\n        stopScroll()\n      })\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(root, 'mouseleave', () => {\n          resume = true\n          startScroll()\n        })\n      }\n    }\n\n    if (options.stopOnFocusIn) {\n      eventStore.add(container, 'focusin', () => {\n        stopScroll()\n        emblaApi.scrollTo(emblaApi.selectedScrollSnap(), true)\n      })\n\n      if (!options.stopOnInteraction) {\n        eventStore.add(container, 'focusout', startScroll)\n      }\n    }\n\n    if (options.playOnInit) startScroll()\n  }\n\n  function destroy(): void {\n    emblaApi\n      .off('pointerDown', stopScroll)\n      .off('pointerUp', startScrollOnSettle)\n      .off('settle', onSettle)\n    stopScroll()\n    destroyed = true\n    playing = false\n  }\n\n  function startScroll(): void {\n    if (destroyed || playing) return\n    if (!resume) return\n    emblaApi.emit('autoScroll:play')\n\n    const engine = emblaApi.internalEngine()\n    const { ownerWindow } = engine\n\n    timer = ownerWindow.setTimeout(() => {\n      engine.scrollBody = createAutoScrollBehaviour(engine)\n      engine.animation.start()\n    }, startDelay)\n\n    playing = true\n  }\n\n  function stopScroll(): void {\n    if (destroyed || !playing) return\n    emblaApi.emit('autoScroll:stop')\n\n    const engine = emblaApi.internalEngine()\n    const { ownerWindow } = engine\n\n    engine.scrollBody = defaultScrollBehaviour\n    ownerWindow.clearTimeout(timer)\n    timer = 0\n\n    playing = false\n  }\n\n  function onSettle(): void {\n    if (resume) startScroll()\n    emblaApi.off('settle', onSettle)\n  }\n\n  function startScrollOnSettle(): void {\n    emblaApi.on('settle', onSettle)\n  }\n\n  function createAutoScrollBehaviour(engine: EngineType): ScrollBodyType {\n    const {\n      location,\n      target,\n      scrollTarget,\n      index,\n      indexPrevious,\n      limit: { reachedMin, reachedMax, constrain },\n      options: { loop }\n    } = engine\n    const directionSign = options.direction === 'forward' ? -1 : 1\n    const noop = (): ScrollBodyType => self\n\n    let bodyVelocity = 0\n    let scrollDirection = 0\n    let rawLocation = location.get()\n    let rawLocationPrevious = 0\n    let hasSettled = false\n\n    function seek(): ScrollBodyType {\n      let directionDiff = 0\n\n      bodyVelocity = directionSign * options.speed\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n      target.set(location)\n\n      directionDiff = rawLocation - rawLocationPrevious\n      scrollDirection = Math.sign(directionDiff)\n      rawLocationPrevious = rawLocation\n\n      const currentIndex = scrollTarget.byDistance(0, false).index\n\n      if (index.get() !== currentIndex) {\n        indexPrevious.set(index.get())\n        index.set(currentIndex)\n        emblaApi.emit('select')\n      }\n\n      const reachedEnd =\n        options.direction === 'forward'\n          ? reachedMin(location.get())\n          : reachedMax(location.get())\n\n      if (!loop && reachedEnd) {\n        hasSettled = true\n        const constrainedLocation = constrain(location.get())\n        location.set(constrainedLocation)\n        target.set(location)\n        stopScroll()\n      }\n\n      return self\n    }\n\n    const self: ScrollBodyType = {\n      direction: () => scrollDirection,\n      duration: () => -1,\n      velocity: () => bodyVelocity,\n      settled: () => hasSettled,\n      seek,\n      useBaseFriction: noop,\n      useBaseDuration: noop,\n      useFriction: noop,\n      useDuration: noop\n    }\n    return self\n  }\n\n  function play(startDelayOverride?: number): void {\n    if (typeof startDelayOverride !== 'undefined') {\n      startDelay = startDelayOverride\n    }\n    resume = true\n    startScroll()\n  }\n\n  function stop(): void {\n    if (playing) stopScroll()\n  }\n\n  function reset(): void {\n    if (playing) {\n      stopScroll()\n      startScrollOnSettle()\n    }\n  }\n\n  function isPlaying(): boolean {\n    return playing\n  }\n\n  const self: AutoScrollType = {\n    name: 'autoScroll',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  }\n  return self\n}\n\nAutoScroll.globalOptions = <AutoScrollOptionsType | undefined>undefined\n\nexport default AutoScroll\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport AutoScroll from 'embla-carousel-auto-scroll'\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons\n} from '../EmblaCarouselArrowButtons'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [\n    AutoScroll({ playOnInit: false })\n  ])\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi)\n\n  const onButtonAutoplayClick = useCallback(\n    (callback: () => void) => {\n      const autoScroll = emblaApi?.plugins()?.autoScroll\n      if (!autoScroll) return\n\n      const resetOrStop =\n        autoScroll.options.stopOnInteraction === false\n          ? autoScroll.reset\n          : autoScroll.stop\n\n      resetOrStop()\n      callback()\n    },\n    [emblaApi]\n  )\n\n  const toggleAutoplay = useCallback(() => {\n    const autoScroll = emblaApi?.plugins()?.autoScroll\n    if (!autoScroll) return\n\n    const playOrStop = autoScroll.isPlaying()\n      ? autoScroll.stop\n      : autoScroll.play\n    playOrStop()\n  }, [emblaApi])\n\n  useEffect(() => {\n    const autoScroll = emblaApi?.plugins()?.autoScroll\n    if (!autoScroll) return\n\n    setIsPlaying(autoScroll.isPlaying())\n    emblaApi\n      .on('autoScroll:play', () => setIsPlaying(true))\n      .on('autoScroll:stop', () => setIsPlaying(false))\n      .on('reInit', () => setIsPlaying(autoScroll.isPlaying()))\n  }, [emblaApi])\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton\n            onClick={() => onButtonAutoplayClick(onPrevButtonClick)}\n            disabled={prevBtnDisabled}\n          />\n          <NextButton\n            onClick={() => onButtonAutoplayClick(onNextButtonClick)}\n            disabled={nextBtnDisabled}\n          />\n        </div>\n\n        <button className=\"embla__play\" onClick={toggleAutoplay} type=\"button\">\n          {isPlaying ? 'Stop' : 'Start'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport Autoplay from 'embla-carousel-autoplay'\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons\n} from '../EmblaCarouselArrowButtons'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [\n    Autoplay({ playOnInit: false, delay: 3000 })\n  ])\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi)\n\n  const onButtonAutoplayClick = useCallback(\n    (callback: () => void) => {\n      const autoplay = emblaApi?.plugins()?.autoplay\n      if (!autoplay) return\n\n      const resetOrStop =\n        autoplay.options.stopOnInteraction === false\n          ? autoplay.reset\n          : autoplay.stop\n\n      resetOrStop()\n      callback()\n    },\n    [emblaApi]\n  )\n\n  const toggleAutoplay = useCallback(() => {\n    const autoplay = emblaApi?.plugins()?.autoplay\n    if (!autoplay) return\n\n    const playOrStop = autoplay.isPlaying() ? autoplay.stop : autoplay.play\n    playOrStop()\n  }, [emblaApi])\n\n  useEffect(() => {\n    const autoplay = emblaApi?.plugins()?.autoplay\n    if (!autoplay) return\n\n    setIsPlaying(autoplay.isPlaying())\n    emblaApi\n      .on('autoplay:play', () => setIsPlaying(true))\n      .on('autoplay:stop', () => setIsPlaying(false))\n      .on('reInit', () => setIsPlaying(autoplay.isPlaying()))\n  }, [emblaApi])\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton\n            onClick={() => onButtonAutoplayClick(onPrevButtonClick)}\n            disabled={prevBtnDisabled}\n          />\n          <NextButton\n            onClick={() => onButtonAutoplayClick(onNextButtonClick)}\n            disabled={nextBtnDisabled}\n          />\n        </div>\n\n        <button className=\"embla__play\" onClick={toggleAutoplay} type=\"button\">\n          {isPlaying ? 'Stop' : 'Start'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n","import React from 'react'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport useEmblaCarousel from 'embla-carousel-react'\nimport ClassNames from 'embla-carousel-class-names'\nimport {\n  NextButton,\n  PrevButton,\n  usePrevNextButtons\n} from '../EmblaCarouselArrowButtons'\nimport { DotButton, useDotButton } from '../EmblaCarouselDotButton'\nimport { sandboxImages } from 'components/Sandbox/sandboxImages'\n\ntype PropType = {\n  slides: number[]\n  options?: EmblaOptionsType\n}\n\nconst EmblaCarousel: React.FC<PropType> = (props) => {\n  const { slides, options } = props\n  const [emblaRef, emblaApi] = useEmblaCarousel(options, [ClassNames()])\n\n  const { selectedIndex, scrollSnaps, onDotButtonClick } =\n    useDotButton(emblaApi)\n\n  const {\n    prevBtnDisabled,\n    nextBtnDisabled,\n    onPrevButtonClick,\n    onNextButtonClick\n  } = usePrevNextButtons(emblaApi)\n\n  return (\n    <div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (\n            <div className=\"embla__slide embla__class-names\" key={index}>\n              <img\n                className=\"embla__slide__img\"\n                src={sandboxImages(index)}\n                alt=\"Your alt text\"\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton onClick={onPrevButtonClick} disabled={prevBtnDisabled} />\n          <NextButton onClick={onNextButtonClick} disabled={nextBtnDisabled} />\n        </div>\n\n        <div className=\"embla__dots\">\n          {scrollSnaps.map((_, index) => (\n            <DotButton\n              key={index}\n              onClick={() => onDotButtonClick(index)}\n              className={'embla__dot'.concat(\n                index === selectedIndex ? ' embla__dot--selected' : ''\n              )}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarousel\n"],"names":["ID","SLIDES","arrayFromNumber","OPTIONS","SANDBOX_SETTINGS","CONTEXT_DEFAULT_VALUE","formData","id","slideList","navigationPrevNextButtons","navigationDots","SANDBOXES","staticGeneratorSandboxes","Wrapper","styled","div","withConfig","displayName","componentId","examplesDefaultWrapperStyles","sandboxGeneratorCreateStyles","Default","inViewRef","inView","useInView","EXAMPLES_INTERSECTION_OPTIONS","React","SandboxSelection","sandboxes","className","ref","SandboxGeneratorExample","slides","options","loop","slideSize","Loop","direction","RightToLeft","slidesToScroll","SlidesToScroll","dragFree","selectedSnapDisplay","styles","examplesCarouselDragFreeStyles","DragFree","containScroll","Align","examplesCarouselVariableWidthStyles","VariableWidths","axis","YAxis","align","examplesCarouselSlidesPerViewStyles","SlidesPerView","STYLES","examplesCarouselThumbsStyles","SANDBOX_CONFIG","sandboxStaticSandboxes","examplesThumbsWrapperStyles","Thumbs","CarouselThumbs","examplesCarouselParallaxStyles","Parallax","CarouselParallax","examplesCarouselScaleStyles","Scale","CarouselScale","examplesCarouselOpacityStyles","Opacity","CarouselOpacity","examplesCarouselProgressStyles","Progress","CarouselProgress","examplesCarouselLazyLoadStyles","LazyLoad","CarouselLazyLoad","watchSlides","watchResize","examplesCarouselInfiniteScrollStyles","InfiniteScroll","CarouselInfiniteScroll","examplesCarouselIosPickerStyles","SANDBOX_LOOP_CONFIG","SANDBOXES_LOOP","examplesIosPickerWrapperStyles","IosPicker","props","CarouselIosPicker","_createMdxContent","_components","Object","assign","h1","p","a","hr","h2","span","h3","_provideComponents","components","href","style","position","dangerouslySetInnerHTML","__html","Autoplay","AutoScroll","AutoHeight","ClassNames","wrapper","MDXLayout","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","useMemo","Date","toISOString","Seo","url","slug","type","removeProtocol","maskable","PageDefault","children","next","previous","filePath","PageBreadcrumbs","MAIN_CONTENT_ID","Mdx","PageEditThisPage","pageUrl","PagePagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","examplesCarouselAutoHeightStyles","CarouselAutoHeight","examplesCarouselAutoplayStyles","CarouselAutoScroll","CarouselAutoplay","examplesCarouselClassNamesStyles","CarouselClassNames","defaultOptions","active","breakpoints","destroyHeight","userOptions","emblaApi","slideHeights","heightEvents","setContainerHeight","_","evt","height","slideRegistry","internalEngine","selectedScrollSnap","map","index","reduce","b","Math","max","highestInView","containerNode","name","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","slideRects","slideRect","forEach","on","destroy","off","undefined","emblaRef","useEmblaCarousel","selectedIndex","scrollSnaps","onDotButtonClick","useDotButton","prevBtnDisabled","nextBtnDisabled","onPrevButtonClick","onNextButtonClick","usePrevNextButtons","key","PrevButton","onClick","disabled","NextButton","DotButton","concat","speed","startDelay","playOnInit","stopOnFocusIn","stopOnInteraction","stopOnMouseEnter","rootNode","destroyed","defaultScrollBehaviour","playing","resume","timer","startScroll","emit","engine","ownerWindow","setTimeout","scrollBody","location","target","scrollTarget","indexPrevious","limit","reachedMin","reachedMax","constrain","directionSign","noop","self","bodyVelocity","scrollDirection","rawLocation","get","rawLocationPrevious","hasSettled","seek","directionDiff","add","set","sign","currentIndex","byDistance","reachedEnd","constrainedLocation","stopScroll","duration","velocity","settled","useBaseFriction","useBaseDuration","useFriction","useDuration","createAutoScrollBehaviour","animation","start","clearTimeout","onSettle","startScrollOnSettle","scrollSnapList","length","eventStore","emblaRoot","root","container","scrollTo","play","startDelayOverride","stop","reset","isPlaying","setIsPlaying","useState","onButtonAutoplayClick","useCallback","callback","_emblaApi$plugins","autoScroll","plugins","toggleAutoplay","_emblaApi$plugins2","useEffect","_emblaApi$plugins3","delay","autoplay","src","sandboxImages","alt"],"sourceRoot":""}