{"version":3,"file":"component---src-templates-generator-tsx-content-file-path-src-content-pages-examples-generator-mdx-0bfe6b0f7fcb119eef0a.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/hooks/useCarouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFrameworkSettings.tsx","webpack://embla-carousel-docs/./src/components/Input/InputCheckbox.tsx","webpack://embla-carousel-docs/./src/components/Input/InputText.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFormItems.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorBasicSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSlidesSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorAlignmentSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorNavigationSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorPlugins.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSubmit.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSupport.tsx","webpack://embla-carousel-docs/./src/content/pages/examples/generator.mdx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorForm.tsx","webpack://embla-carousel-docs/./src/templates/Default.tsx","webpack://embla-carousel-docs/./src/templates/Generator.tsx"],"sourcesContent":["import { useContext } from 'react'\nimport {\n  CarouselGeneratorContext,\n  CarouselGeneratorContextType\n} from 'components/CarouselGenerator/CarouselGeneratorContext'\n\nexport const useCarouselGenerator = (): CarouselGeneratorContextType =>\n  useContext(CarouselGeneratorContext)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { dynamicGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelectionInput } from 'components/Sandbox/SandboxSelectionInput'\nimport { snakeCaseToKebabCase } from 'utils/stringCasing'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { SANDBOX_SELECTION_SPACING } from 'consts/sandbox'\nimport {\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_FRAMEWORK: SandboxGeneratorRadioType<'framework'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.FRAMEWORK),\n  OPTIONS: []\n}\n\nconst SandboxSelectionList = styled.ul`\n  ${createGapStyles(\n    SANDBOX_SELECTION_SPACING,\n    SANDBOX_SELECTION_SPACING,\n    'li'\n  )};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n`\n\nexport const CarouselGeneratorFrameworkSettings = () => {\n  const { formData, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <div>\n      <SandboxSelectionList role=\"radiogroup\" aria-label={INPUT_FRAMEWORK.ID}>\n        {dynamicGeneratorSandboxes.map((sandbox) => (\n          <li key={sandbox.key}>\n            <SandboxSelectionInput\n              framework={sandbox.key}\n              name={INPUT_FRAMEWORK.FIELD_NAME}\n              id={`${INPUT_FRAMEWORK.ID}-${snakeCaseToKebabCase(sandbox.key)}`}\n              value={sandbox.key}\n              onChange={onRadioChange}\n              checked={formData[INPUT_FRAMEWORK.FIELD_NAME] === sandbox.key}\n            >\n              {sandbox.label}\n            </SandboxSelectionInput>\n          </li>\n        ))}\n      </SandboxSelectionList>\n    </div>\n  )\n}\n","import { createRadioOrCheckboxDefault } from './createRadioOrCheckboxDefault'\nimport { createRadioOrCheckboxCard } from './createRadioOrCheckboxCard'\n\nexport const InputCheckboxDefault = createRadioOrCheckboxDefault('checkbox')\n\nexport const InputCheckboxCard = createRadioOrCheckboxCard('checkbox')\n","import React, { PropsWithRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { COLORS } from 'consts/themes'\nimport { useKeyNavigating } from 'hooks/useKeyNavigating'\nimport { SPACINGS } from 'consts/spacings'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { LAYERS } from 'consts/layers'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { TAP_HIGHLIGHT_STYLES } from 'consts/tapHighlight'\nimport { KEY_NAVIGATING_STYLES } from 'consts/keyNavigatingStyles'\n\nconst HEIGHT = SPACINGS.EIGHT\nconst SIDES_PADDING = SPACINGS.THREE\nconst INPUT_RADIUS = BORDER_RADIUSES.BOX\n\nconst InputTextWrapper = styled.span`\n  height: ${HEIGHT};\n  border-radius: ${INPUT_RADIUS};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n  background-color: ${COLORS.BACKGROUND_CODE};\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst labelActiveStyles = css`\n  transform: translateY(calc(-100% / 2)) scale(0.8);\n`\n\nconst Label = styled.label`\n  z-index: ${LAYERS.STEP};\n  left: ${SIDES_PADDING};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  position: absolute;\n  top: 0;\n  pointer-events: none;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  transition: transform 0.2s;\n  transform-origin: center left;\n`\n\nconst labelTextActiveStyles = css`\n  background-color: ${COLORS.BACKGROUND_CODE};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n`\n\nconst LabelText = styled.span`\n  padding-left: ${SPACINGS.ONE};\n  padding-right: ${SPACINGS.ONE};\n  border-radius: ${INPUT_RADIUS};\n  z-index: ${LAYERS.STEP};\n  display: flex;\n  position: relative;\n  align-items: center;\n`\n\nconst Highlight = styled.span`\n  ${BRAND_GRADIENT_BACKGROUND_STYLES};\n  top: -${BORDER_SIZES.DETAIL};\n  left: -${BORDER_SIZES.DETAIL};\n  bottom: -${BORDER_SIZES.DETAIL};\n  right: -${BORDER_SIZES.DETAIL};\n  display: block;\n  position: absolute;\n  border-radius: inherit;\n  pointer-events: none;\n  visibility: hidden;\n\n  &:after {\n    background-color: ${COLORS.BACKGROUND_CODE};\n    border-radius: inherit;\n    position: absolute;\n    top: ${BORDER_SIZES.OUTLINE};\n    left: ${BORDER_SIZES.OUTLINE};\n    bottom: ${BORDER_SIZES.OUTLINE};\n    right: ${BORDER_SIZES.OUTLINE};\n    content: '';\n  }\n`\n\nconst Input = styled.input<{\n  $isKeyNavigating: boolean\n  $inputHasValue: boolean\n}>`\n  ${TAP_HIGHLIGHT_STYLES};\n  ${KEY_NAVIGATING_STYLES};\n  z-index: ${LAYERS.STEP};\n  height: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  width: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  color: ${COLORS.TEXT_BODY};\n  font-size: ${FONT_SIZES.BODY};\n  padding: 0 ${SIDES_PADDING};\n  background-color: transparent;\n  appearance: none;\n  -webkit-appearance: none;\n  border-radius: inherit;\n  border: 0;\n\n  &:focus + ${Highlight} + ${Label} {\n    ${labelActiveStyles};\n\n    > ${LabelText} {\n      ${labelTextActiveStyles};\n    }\n  }\n\n  &:focus + ${Highlight} {\n    visibility: visible;\n  }\n\n  ${({ $inputHasValue }) =>\n    $inputHasValue &&\n    css`\n      & + ${Highlight} + ${Label} {\n        ${labelActiveStyles};\n\n        > ${LabelText} {\n          ${labelTextActiveStyles};\n        }\n      }\n    `};\n`\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >\n>\n\nexport const InputText = (props: PropType) => {\n  const { children, className, ...restProps } = props\n  const { isKeyNavigating } = useKeyNavigating()\n\n  return (\n    <InputTextWrapper className={className}>\n      <Input\n        $isKeyNavigating={isKeyNavigating}\n        $inputHasValue={!!restProps.value}\n        type=\"text\"\n        {...restProps}\n      />\n      <Highlight />\n      <Label>\n        <LabelText>{children}</LabelText>\n      </Label>\n    </InputTextWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { MEDIA } from 'consts/breakpoints'\nimport { InputText } from 'components/Input/InputText'\n\nexport const FORM_INPUT_TEXT_MAX_SIZE = '26rem'\n\nexport const FORM_ITEM_SPACING_X = SPACINGS.FOUR\nexport const FORM_ITEM_SPACING_Y = SPACINGS.TWO\n\nexport const FORM_ITEMS_GAP_STYLES = createGapStyles(\n  FORM_ITEM_SPACING_X,\n  FORM_ITEM_SPACING_Y,\n  '*'\n)\n\nexport const FORM_ITEM_MAX_WIDTH_STYLES = css`\n  width: 100%;\n\n  ${MEDIA.MIN_XS} {\n    max-width: 100%;\n    width: ${FORM_INPUT_TEXT_MAX_SIZE};\n  }\n`\n\nexport const CarouselGeneratorFormItems = styled.div`\n  ${FORM_ITEMS_GAP_STYLES};\n  margin-bottom: calc(${FORM_ITEM_SPACING_X} - ${FORM_ITEM_SPACING_Y});\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport const CarouselGeneratorFormItem = styled.div`\n  margin-bottom: ${FORM_ITEM_SPACING_X};\n`\n\nexport const CarouselGeneratorInputText = styled(InputText)`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n","import React from 'react'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport {\n  SandboxGeneratorCheckboxType,\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\n\nconst INPUT_AXIS: SandboxGeneratorRadioType<'axis'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.AXIS),\n  OPTIONS: [\n    { LABEL: 'Horizontal', VALUE: 'x' },\n    { LABEL: 'Vertical', VALUE: 'y' }\n  ]\n}\n\nconst INPUT_DIRECTION: SandboxGeneratorRadioType<'direction'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.DIRECTION),\n  OPTIONS: [\n    { LABEL: 'Left to right', VALUE: 'ltr' },\n    { LABEL: 'Right to left', VALUE: 'rtl' }\n  ]\n}\n\nconst INPUT_LOOP: SandboxGeneratorCheckboxType<'loop'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.LOOP),\n  LABEL: 'Loop'\n}\n\nconst INPUT_DRAG_FREE: SandboxGeneratorCheckboxType<'dragFree'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.DRAG_FREE),\n  LABEL: 'Drag free'\n}\n\nconst INPUT_ACCESSIBILITY: SandboxGeneratorCheckboxType<'accessibility'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.ACCESSIBILITY),\n  LABEL: 'Accessibility (under development)'\n}\n\nexport const CarouselGeneratorBasicSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_AXIS.ID}>\n        {INPUT_AXIS.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_AXIS.FIELD_NAME}\n              id={`${INPUT_AXIS.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_AXIS.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItems\n        role=\"radiogroup\"\n        aria-label={INPUT_DIRECTION.ID}\n      >\n        {INPUT_DIRECTION.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_DIRECTION.FIELD_NAME}\n              id={`${INPUT_DIRECTION.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_DIRECTION.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_LOOP.FIELD_NAME}\n          id={INPUT_LOOP.ID}\n          checked={formData[INPUT_LOOP.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_LOOP.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DRAG_FREE.FIELD_NAME}\n          id={INPUT_DRAG_FREE.ID}\n          checked={formData[INPUT_DRAG_FREE.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DRAG_FREE.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_ACCESSIBILITY.FIELD_NAME}\n          id={INPUT_ACCESSIBILITY.ID}\n          checked={formData[INPUT_ACCESSIBILITY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_ACCESSIBILITY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorInputText\n} from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorInputTextType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_SLIDE_SIZE: SandboxGeneratorInputTextType<'slideSize'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_SIZE),\n  LABEL: 'Slide size (%)'\n}\n\nconst INPUT_SLIDE_GAP_SIZE: SandboxGeneratorInputTextType<'slideGapSize'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_GAP_SIZE\n  ),\n  LABEL: 'Slide gaps (px)'\n}\n\nexport const CarouselGeneratorSlidesSettings = () => {\n  const { formData, onNumberChange, onNumberBlur } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"10\"\n          max=\"100\"\n          name={INPUT_SLIDE_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_SIZE.ID}\n          value={formData[INPUT_SLIDE_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"0\"\n          max=\"20\"\n          name={INPUT_SLIDE_GAP_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_GAP_SIZE.ID}\n          value={formData[INPUT_SLIDE_GAP_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_GAP_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport Carousel from 'components/Sandbox/SandboxGeneratorExample'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport {\n  CAROUSEL_DEFAULT_HEIGHT,\n  CAROUSEL_SLIDES_SPACING,\n  SLIDE_NUMBER_STYLES,\n  examplesCarouselDefaultStyles\n} from 'components/Examples/examplesCarouselStyles'\nimport { Admonition } from 'components/Mdx/Components/Admonition'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { LAYERS } from 'consts/layers'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { useInView } from 'react-intersection-observer'\nimport { SPACINGS } from 'consts/spacings'\nimport {\n  SANDBOX_GENERATOR_FORM_FIELDS,\n  SandboxGeneratorSettingsType\n} from 'consts/sandbox'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { examplesDefaultWrapperStyles } from 'components/Examples/examplesWrapperStyles'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorCheckboxType,\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\nimport { styledComponentsStylesToString } from 'utils/styledComponentStylesToString'\n\nconst INPUT_ALIGN: SandboxGeneratorRadioType<'align'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.ALIGN),\n  OPTIONS: [\n    { LABEL: 'Start', VALUE: 'start' },\n    { LABEL: 'Center', VALUE: 'center' },\n    { LABEL: 'End', VALUE: 'end' }\n  ]\n}\n\nconst INPUT_CONTAIN_SCROLL: SandboxGeneratorCheckboxType<'containScroll'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.CONTAIN_SCROLL\n  ),\n  LABEL: 'Clear leading and trailing space'\n}\n\nconst SLIDES = arrayFromNumber(5)\nconst CAROUSEL_ALIGN_ID = `${INPUT_ALIGN.ID}-demo`\n\nconst CAROUSEL_STYLES = examplesCarouselDefaultStyles(\n  '60%',\n  '1rem',\n  'x',\n  styledComponentsStylesToString(SLIDE_NUMBER_STYLES)\n)\n\nconst CarouselWrapper = styled.div<{\n  $showContainScroll: boolean\n  $align: EmblaOptionsType['align']\n}>`\n  ${examplesDefaultWrapperStyles};\n  min-height: ${CAROUSEL_DEFAULT_HEIGHT};\n\n  .embla {\n    max-width: none !important;\n  }\n\n  &.${CAROUSEL_ALIGN_ID} {\n    ${CAROUSEL_STYLES};\n    margin-bottom: ${SPACINGS.FOUR};\n    position: relative;\n\n      ${({ $showContainScroll, $align }) =>\n        $showContainScroll &&\n        css`\n          .embla__slide:first-child,\n          .embla__slide:last-child {\n            position: relative;\n\n            &:before {\n              top: 0;\n              bottom: 0;\n              position: absolute;\n              font-size: ${FONT_SIZES.CUSTOM(() => 1.3)};\n              text-align: center;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: calc(100% / 3);\n            }\n          }\n\n          .embla__slide:first-child {\n            &:before {\n              content: 'Leading space';\n              right: calc(100% - ${CAROUSEL_SLIDES_SPACING});\n              ${$align === 'start' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n\n          .embla__slide:last-child {\n            &:before {\n              content: 'Trailing space';\n              left: 100%;\n              ${$align === 'end' &&\n              css`\n                display: none;\n              `}\n            }\n          }\n        `};\n    }\n  }\n`\n\nconst AlignmentMarker = styled.div<{\n  $align: EmblaOptionsType['align']\n}>`\n  &:before {\n    ${BRAND_GRADIENT_BACKGROUND_STYLES};\n    width: ${BORDER_SIZES.ACCENT_VERTICAL};\n    top: 0;\n    bottom: 0;\n    z-index: ${LAYERS.STEP};\n    opacity: 0.7;\n    position: absolute;\n    content: '';\n    display: block;\n    border-radius: ${BORDER_RADIUSES.LINE};\n\n    ${({ $align }) => {\n      if ($align === 'start') {\n        return css`\n          left: 0;\n        `\n      }\n      if ($align === 'end') {\n        return css`\n          right: 0;\n        `\n      }\n      return css`\n        left: 50%;\n        margin-left: calc(-${BORDER_SIZES.ACCENT_VERTICAL} / 2);\n      `\n    }};\n`\n\nexport const CarouselGeneratorAlignmentSettings = () => {\n  const { formData, onChange, onRadioChange } = useCarouselGenerator()\n  const [inViewRef, inView] = useInView()\n  const slideSize = formData[SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_SIZE]\n  const loop = formData[SANDBOX_GENERATOR_FORM_FIELDS.LOOP]\n  const dragFree = formData[SANDBOX_GENERATOR_FORM_FIELDS.DRAG_FREE]\n  const align = formData[INPUT_ALIGN.FIELD_NAME]\n  const containScroll = formData[INPUT_CONTAIN_SCROLL.FIELD_NAME]\n  const [options, setOptions] = useState<EmblaOptionsType>({\n    align,\n    containScroll,\n    loop,\n    dragFree\n  })\n\n  useEffect(() => {\n    setOptions({\n      align,\n      containScroll,\n      loop,\n      dragFree\n    })\n  }, [loop, dragFree, align, containScroll])\n\n  return (\n    <>\n      {slideSize === '100' && (\n        <Admonition type=\"note\">\n          Aligment settings will only <strong>work</strong> for carousels with{' '}\n          slide sizes <strong>less than 100%</strong>.\n        </Admonition>\n      )}\n      <CarouselWrapper\n        className={CAROUSEL_ALIGN_ID}\n        ref={inViewRef}\n        $showContainScroll={!containScroll && !loop}\n        $align={align}\n      >\n        {inView ? (\n          <>\n            <Carousel\n              slides={SLIDES}\n              options={options}\n              navigationDots={false}\n              navigationPrevNextButtons={false}\n            />\n            <AlignmentMarker $align={align} />\n          </>\n        ) : null}\n      </CarouselWrapper>\n\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_ALIGN.ID}>\n        {INPUT_ALIGN.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={LABEL}>\n            <InputRadioDefault\n              name={INPUT_ALIGN.FIELD_NAME}\n              id={`${INPUT_ALIGN.ID}-${VALUE}`}\n              value={VALUE as string}\n              checked={formData[INPUT_ALIGN.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      {!loop && (\n        <CarouselGeneratorFormItem>\n          <InputCheckboxDefault\n            name={INPUT_CONTAIN_SCROLL.FIELD_NAME}\n            id={INPUT_CONTAIN_SCROLL.ID}\n            checked={formData[INPUT_CONTAIN_SCROLL.FIELD_NAME] === 'trimSnaps'}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const { name, checked } = event.currentTarget\n              const fieldName = name as keyof SandboxGeneratorSettingsType\n              onChange(fieldName, checked ? 'trimSnaps' : false)\n            }}\n          >\n            {INPUT_CONTAIN_SCROLL.LABEL}\n          </InputCheckboxDefault>\n        </CarouselGeneratorFormItem>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport {\n  SandboxGeneratorCheckboxType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_PREV_NEXT_BUTTONS: SandboxGeneratorCheckboxType<'navigationPrevNextButtons'> =\n  {\n    ...createSandboxGeneratorInputId(\n      SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_PREV_NEXT_BUTTONS\n    ),\n    LABEL: 'Previous and next buttons'\n  }\n\nconst INPUT_DOTS: SandboxGeneratorCheckboxType<'navigationDots'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_DOTS\n  ),\n  LABEL: 'Dot navigation'\n}\n\nexport const CarouselGeneratorNavigationSettings = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_PREV_NEXT_BUTTONS.FIELD_NAME}\n          id={INPUT_PREV_NEXT_BUTTONS.ID}\n          checked={formData[INPUT_PREV_NEXT_BUTTONS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_PREV_NEXT_BUTTONS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DOTS.FIELD_NAME}\n          id={INPUT_DOTS.ID}\n          checked={formData[INPUT_DOTS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DOTS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorCheckboxType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_AUTOPLAY: SandboxGeneratorCheckboxType<'autoplay'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.AUTOPLAY),\n  LABEL: 'Autoplay'\n}\n\nconst INPUT_WHEEL_GESTURES: SandboxGeneratorCheckboxType<'wheelGestures'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.WHEEL_GESTURES\n  ),\n  LABEL: 'Wheel gestures (under development)'\n}\n\nexport const CarouselGeneratorPlugins = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_AUTOPLAY.FIELD_NAME}\n          id={INPUT_AUTOPLAY.ID}\n          checked={formData[INPUT_AUTOPLAY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_AUTOPLAY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_WHEEL_GESTURES.FIELD_NAME}\n          id={INPUT_WHEEL_GESTURES.ID}\n          checked={formData[INPUT_WHEEL_GESTURES.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_WHEEL_GESTURES.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { ButtonPrimaryFilledWithLoading } from 'components/Button/ButtonPrimaryFilled'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { dynamicGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport {\n  FORM_ITEM_MAX_WIDTH_STYLES,\n  FORM_ITEM_SPACING_X\n} from './CarouselGeneratorFormItems'\n\nconst CarouselGeneratorSubmitWrapper = styled.div`\n  ${createGapStyles(FORM_ITEM_SPACING_X, SPACINGS.EIGHT)}\n  margin-top: ${SPACINGS.EIGHT};\n`\n\nconst CarouselGeneratorButtonWrapper = styled.div`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n\nexport const CarouselGeneratorSubmit = () => {\n  const { formData } = useCarouselGenerator()\n  const [sandbox, setSandbox] = useState('')\n  const sandboxKey = formData.framework\n  const isLoading = !!(sandboxKey && !sandbox)\n\n  const loadSandbox = useCallback(\n    async (\n      key: SandboxLabelKeyType,\n      settings: SandboxGeneratorSettingsType\n    ) => {\n      const sandbox = dynamicGeneratorSandboxes.find(\n        (sandbox) => sandbox.key === key\n      )\n      if (sandbox) setSandbox(await sandbox.createSandbox(settings))\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (sandboxKey) {\n      setSandbox('')\n      loadSandbox(sandboxKey, formData)\n    }\n  }, [sandboxKey, formData])\n\n  return (\n    <div>\n      <input type=\"hidden\" name=\"parameters\" value={sandbox} />\n\n      <CarouselGeneratorSubmitWrapper>\n        <CarouselGeneratorButtonWrapper>\n          <ButtonPrimaryFilledWithLoading\n            isLoading={isLoading}\n            disabled={!sandbox}\n            type=\"submit\"\n          >\n            Create CodeSandbox\n          </ButtonPrimaryFilledWithLoading>\n        </CarouselGeneratorButtonWrapper>\n      </CarouselGeneratorSubmitWrapper>\n    </div>\n  )\n}\n","import React from 'react'\nimport { LinkContent } from 'components/Link/LinkContent'\nimport { URLS } from 'consts/urls'\n\nexport const CarouselGeneratorSupport = () => {\n  return (\n    <ul>\n      <li>\n        <LinkContent to={URLS.DONATE_PAYPAL}>PayPal</LinkContent>\n      </li>\n      <li>\n        <LinkContent to={URLS.DONATE_KO_FI}>Ko-fi</LinkContent>\n      </li>\n    </ul>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {URLS} from 'consts/urls';\nimport {LinkContent} from 'components/Link/LinkContent';\nimport {CarouselGeneratorFrameworkSettings} from 'components/CarouselGenerator/CarouselGeneratorFrameworkSettings';\nimport {CarouselGeneratorBasicSettings} from 'components/CarouselGenerator/CarouselGeneratorBasicSettings';\nimport {CarouselGeneratorSlidesSettings} from 'components/CarouselGenerator/CarouselGeneratorSlidesSettings';\nimport {CarouselGeneratorAlignmentSettings} from 'components/CarouselGenerator/CarouselGeneratorAlignmentSettings';\nimport {CarouselGeneratorNavigationSettings} from 'components/CarouselGenerator/CarouselGeneratorNavigationSettings';\nimport {CarouselGeneratorPlugins} from 'components/CarouselGenerator/CarouselGeneratorPlugins';\nimport {CarouselGeneratorSubmit} from 'components/CarouselGenerator/CarouselGeneratorSubmit';\nimport {CarouselGeneratorSupport} from 'components/CarouselGenerator/CarouselGeneratorSupport';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {Admonition} = _components;\n  if (!Admonition) _missingMdxReference(\"Admonition\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Carousel generator\"), \"\\n\", React.createElement(_components.p, null, \"Just follow the instructions and create your own customized carousel setup in no time!\"), \"\\n\", React.createElement(Admonition, {\n    type: \"warning\"\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Caution:\"), \" The carousel generator is an experimental Embla Carousel feature\\nintroduced in v8.0.0. This generator is subject to change before it is marked\\nas stable.\"), React.createElement(\"br\"), React.createElement(_components.p, null, \"Join the \", React.createElement(LinkContent, {\n    to: `${URLS.GITHUB_DISCUSSIONS}/513`\n  }, \"discussion here\"), \"!\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"choose-framework\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choose-framework\",\n    \"aria-label\": \"choose framework permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Choose framework\"), \"\\n\", React.createElement(CarouselGeneratorFrameworkSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-settings\",\n    \"aria-label\": \"basic settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Basic settings\"), \"\\n\", React.createElement(CarouselGeneratorBasicSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"slide-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slide-settings\",\n    \"aria-label\": \"slide settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slide settings\"), \"\\n\", React.createElement(CarouselGeneratorSlidesSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"alignment-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#alignment-settings\",\n    \"aria-label\": \"alignment settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Alignment settings\"), \"\\n\", React.createElement(CarouselGeneratorAlignmentSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"navigation-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#navigation-settings\",\n    \"aria-label\": \"navigation settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Navigation settings\"), \"\\n\", React.createElement(CarouselGeneratorNavigationSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"plugins\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Plugins\"), \"\\n\", React.createElement(CarouselGeneratorPlugins), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(CarouselGeneratorSubmit), \"\\n\", React.createElement(_components.h2, {\n    id: \"support\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#support\",\n    \"aria-label\": \"support permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Support\"), \"\\n\", React.createElement(_components.p, null, \"Did this save you time? Don't say thank you! \", React.createElement(_components.strong, null, \"Share\"), \" it, \", React.createElement(_components.strong, null, \"star\"), \" it or \", React.createElement(_components.strong, null, \"support\"), \" my work:\"), \"\\n\", React.createElement(CarouselGeneratorSupport));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React, { PropsWithRef } from 'react'\nimport { URLS } from 'consts/urls'\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n  >\n>\n\nexport const CarouselGeneratorForm = (props: PropType) => {\n  const { children, ...restProps } = props\n\n  return (\n    <form\n      action={URLS.CODESANDBOX_DEFINE}\n      method=\"POST\"\n      target=\"_blank\"\n      {...restProps}\n    >\n      {children}\n    </form>\n  )\n}\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Seo } from 'components/Seo/Seo'\nimport maskable from 'assets/images/maskable.png'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { PageEditThisPage } from 'components/Page/PageEditThisPage'\nimport { PagePagination } from 'components/Page/PagePagination'\nimport { PageBreadcrumbs } from 'components/Page/PageBreadcrumbs'\nimport { MAIN_CONTENT_ID } from 'components/KeyNavigating/KeyNavigatingSkipToContent'\nimport { removeProtocol } from 'utils/removeProtocol'\nimport { Mdx } from 'components/Mdx/Mdx'\nimport {\n  PagePropType,\n  PageHeadPropType,\n  PageDefaultLayoutType,\n  PagePaginationType\n} from 'consts/page'\n\nexport const query = graphql`\n  query PageDefaultQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      tableOfContents\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM YYYY\")\n      }\n    }\n  }\n`\n\nexport const Head = (props: PageHeadPropType) => {\n  const { data, pageContext } = props\n  const { siteUrl, author } = useSiteMetadata()\n  const { title = '', description, date } = data.mdx.frontmatter\n  const dateToISOString = useMemo(\n    () => new Date(`${date} UTC`).toISOString(),\n    [date]\n  )\n\n  return (\n    <Seo\n      title={title}\n      description={description}\n      url={`${siteUrl}${pageContext.slug}`}\n    >\n      <script type=\"application/ld+json\">\n        {`\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"TechArticle\",\n        \"name\": \"${removeProtocol(siteUrl)}\",\n        \"description\": \"${description}\",\n        \"url\": \"${siteUrl}${pageContext.slug}\",\n        \"headline\": \"${title}\",\n        \"image\": \"${siteUrl}/share-image.png\",\n        \"datePublished\": \"${dateToISOString}\",\n        \"dateModified\": \"${dateToISOString}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${author}\"\n        },\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"${author}\",\n          \"logo\": {\n            \"@type\": \"ImageObject\",\n            \"width\": \"512\",\n            \"height\": \"512\",\n            \"url\": \"${siteUrl}${maskable}\"\n          }\n        }\n      }\n    `}\n      </script>\n    </Seo>\n  )\n}\n\nexport type PropType = PropsWithChildren<\n  PagePropType<PageDefaultLayoutType, PagePaginationType>\n>\n\nconst PageDefault = (props: PropType) => {\n  const { pageContext, children } = props\n  const { next, previous, filePath, id } = pageContext\n\n  return (\n    <>\n      <PageBreadcrumbs id={id} />\n      <article id={MAIN_CONTENT_ID}>\n        <Mdx>{children}</Mdx>\n      </article>\n      <PageEditThisPage pageUrl={filePath} />\n      <PagePagination previous={previous} next={next} />\n    </>\n  )\n}\n\nexport default PageDefault\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/examples/generator.mdx\";\nimport React from 'react';\nimport {PageEditThisPage} from 'components/Page/PageEditThisPage';\nimport {PagePagination} from 'components/Page/PagePagination';\nimport {PageBreadcrumbs} from 'components/Page/PageBreadcrumbs';\nimport {MAIN_CONTENT_ID} from 'components/KeyNavigating/KeyNavigatingSkipToContent';\nimport {CarouselGeneratorForm} from 'components/CarouselGenerator/CarouselGeneratorForm';\nimport {CarouselGeneratorProvider} from 'components/CarouselGenerator/CarouselGeneratorContext';\nimport {Mdx} from 'components/Mdx/Mdx';\nimport {Head} from './Default';\nconst query = \"1476602449\";\nexport {Head};\nconst PageGenerator = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(PageBreadcrumbs, {\n    id: id\n  }), React.createElement(CarouselGeneratorProvider, null, React.createElement(CarouselGeneratorForm, {\n    id: MAIN_CONTENT_ID\n  }, React.createElement(Mdx, null, children))), React.createElement(PageEditThisPage, {\n    pageUrl: filePath\n  }), React.createElement(PagePagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPageGenerator\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageGenerator, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["useCarouselGenerator","useContext","CarouselGeneratorContext","INPUT_FRAMEWORK","createSandboxGeneratorInputId","SANDBOX_GENERATOR_FORM_FIELDS","FRAMEWORK","OPTIONS","SandboxSelectionList","styled","ul","withConfig","displayName","componentId","createGapStyles","SANDBOX_SELECTION_SPACING","CarouselGeneratorFrameworkSettings","formData","onRadioChange","React","role","ID","dynamicGeneratorSandboxes","map","sandbox","key","SandboxSelectionInput","framework","name","FIELD_NAME","id","snakeCaseToKebabCase","value","onChange","checked","label","InputCheckboxDefault","createRadioOrCheckboxDefault","createRadioOrCheckboxCard","HEIGHT","SPACINGS","EIGHT","SIDES_PADDING","THREE","INPUT_RADIUS","BORDER_RADIUSES","BOX","InputTextWrapper","span","BORDER_SIZES","DETAIL","COLORS","DETAIL_LOW_CONTRAST","BACKGROUND_CODE","labelActiveStyles","css","Label","LAYERS","STEP","TEXT_LOW_CONTRAST","labelTextActiveStyles","LabelText","ONE","Highlight","BRAND_GRADIENT_BACKGROUND_STYLES","OUTLINE","Input","input","TAP_HIGHLIGHT_STYLES","KEY_NAVIGATING_STYLES","TEXT_BODY","FONT_SIZES","BODY","_ref","$inputHasValue","FORM_ITEM_SPACING_X","FOUR","FORM_ITEM_SPACING_Y","TWO","FORM_ITEMS_GAP_STYLES","FORM_ITEM_MAX_WIDTH_STYLES","MEDIA","MIN_XS","CarouselGeneratorFormItems","div","CarouselGeneratorFormItem","CarouselGeneratorInputText","props","children","className","restProps","isKeyNavigating","useKeyNavigating","Object","assign","$isKeyNavigating","type","INPUT_AXIS","AXIS","LABEL","VALUE","INPUT_DIRECTION","DIRECTION","INPUT_LOOP","LOOP","INPUT_DRAG_FREE","DRAG_FREE","INPUT_ACCESSIBILITY","ACCESSIBILITY","CarouselGeneratorBasicSettings","onCheckboxChange","InputRadioDefault","_ref2","disabled","INPUT_SLIDE_SIZE","SLIDE_SIZE","INPUT_SLIDE_GAP_SIZE","SLIDE_GAP_SIZE","CarouselGeneratorSlidesSettings","onNumberChange","onNumberBlur","min","max","onBlur","INPUT_ALIGN","ALIGN","INPUT_CONTAIN_SCROLL","CONTAIN_SCROLL","SLIDES","arrayFromNumber","CAROUSEL_ALIGN_ID","CAROUSEL_STYLES","examplesCarouselDefaultStyles","styledComponentsStylesToString","SLIDE_NUMBER_STYLES","CarouselWrapper","examplesDefaultWrapperStyles","CAROUSEL_DEFAULT_HEIGHT","$showContainScroll","$align","CUSTOM","CAROUSEL_SLIDES_SPACING","AlignmentMarker","ACCENT_VERTICAL","LINE","CarouselGeneratorAlignmentSettings","inViewRef","inView","useInView","slideSize","loop","dragFree","align","containScroll","options","setOptions","useState","useEffect","Admonition","ref","Carousel","slides","navigationDots","navigationPrevNextButtons","_ref3","event","currentTarget","INPUT_PREV_NEXT_BUTTONS","NAVIGATION_PREV_NEXT_BUTTONS","INPUT_DOTS","NAVIGATION_DOTS","CarouselGeneratorNavigationSettings","INPUT_AUTOPLAY","AUTOPLAY","INPUT_WHEEL_GESTURES","WHEEL_GESTURES","CarouselGeneratorPlugins","CarouselGeneratorSubmitWrapper","CarouselGeneratorButtonWrapper","CarouselGeneratorSubmit","setSandbox","sandboxKey","isLoading","loadSandbox","useCallback","async","settings","find","createSandbox","ButtonPrimaryFilledWithLoading","CarouselGeneratorSupport","LinkContent","to","URLS","DONATE_PAYPAL","DONATE_KO_FI","_createMdxContent","_components","h1","p","strong","hr","h2","a","_provideComponents","components","component","Error","_missingMdxReference","GITHUB_DISCUSSIONS","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","CarouselGeneratorForm","action","CODESANDBOX_DEFINE","method","target","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","useMemo","Date","toISOString","Seo","url","slug","removeProtocol","maskable","PageGenerator","next","previous","filePath","PageBreadcrumbs","CarouselGeneratorProvider","MAIN_CONTENT_ID","Mdx","PageEditThisPage","pageUrl","PagePagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}