{"version":3,"file":"5404-caef99600e4a0ba32426.js","mappings":"uIAAA,4zI","sources":["webpack://embla-carousel-docs/./src/components/Sandbox/React/SandboxFilesDist/CarouselGenerator/EmblaCarousel.tsx"],"sourcesContent":["export default \"import React, {\\n  /*__NAV_AUTOPLAY_REPLACE_START__*/ useCallback /*__NAV_AUTOPLAY_REPLACE_END__*/\\n} from 'react'\\nimport {\\n  EmblaOptionsType,\\n  /*__NAV_AUTOPLAY_REPLACE_START__*/ EmblaCarouselType /*__NAV_AUTOPLAY_REPLACE_END__*/\\n} from 'embla-carousel'\\n/*__DOT_BUTTONS_REPLACE_START__*/\\nimport { DotButton, useDotButton } from './EmblaCarouselDotButton'\\n/*__DOT_BUTTONS_REPLACE_END__*/\\n/*__PREV_NEXT_BUTTONS_REPLACE_START__*/\\nimport {\\n  PrevButton,\\n  NextButton,\\n  usePrevNextButtons\\n} from './EmblaCarouselArrowButtons'\\n/*__PREV_NEXT_BUTTONS_REPLACE_END__*/\\n/*__SELECTED_SNAP_DISPLAY_REPLACE_START__*/\\nimport {\\n  SelectedSnapDisplay,\\n  useSelectedSnapDisplay\\n} from './EmblaCarouselSelectedSnapDisplay'\\n/*__SELECTED_SNAP_DISPLAY_REPLACE_END__*/\\n/*__AUTOPLAY_REPLACE_START__*/\\nimport Autoplay from 'embla-carousel-autoplay'\\n/*__AUTOPLAY_REPLACE_END__*/\\n/*__CLASS_NAMES_REPLACE_START__*/\\nimport ClassNames from 'embla-carousel-class-names'\\n/*__CLASS_NAMES_REPLACE_END__*/\\nimport useEmblaCarousel from 'embla-carousel-react'\\n\\ntype PropType = {\\n  slides: number[]\\n  options?: EmblaOptionsType\\n}\\n\\nconst EmblaCarousel: React.FC<PropType> = (props) => {\\n  const { slides, options } = props\\n  const [emblaRef, emblaApi] = useEmblaCarousel(\\n    options,\\n    /*__PLUGINS_REPLACE_START__*/\\n    [\\n      /*__AUTOPLAY_REPLACE_START__*/\\n      Autoplay(),\\n      /*__AUTOPLAY_REPLACE_END__*/\\n\\n      /*__CLASS_NAMES_REPLACE_START__*/\\n      ClassNames()\\n      /*__CLASS_NAMES_REPLACE_END__*/\\n    ]\\n    /*__PLUGINS_REPLACE_END__*/\\n  )\\n\\n  /*__NAV_AUTOPLAY_REPLACE_START__*/\\n  const onNavButtonClick = useCallback((emblaApi: EmblaCarouselType) => {\\n    const autoplay = emblaApi?.plugins()?.autoplay\\n    if (!autoplay) return\\n\\n    const resetOrStop =\\n      autoplay.options.stopOnInteraction === false\\n        ? autoplay.reset\\n        : autoplay.stop\\n\\n    resetOrStop()\\n  }, [])\\n  /*__NAV_AUTOPLAY_REPLACE_END__*/\\n\\n  /*__DOT_BUTTONS_REPLACE_START__*/\\n  const { selectedIndex, scrollSnaps, onDotButtonClick } = useDotButton(\\n    emblaApi,\\n    /*__NAV_AUTOPLAY_REPLACE_START__*/ onNavButtonClick /*__NAV_AUTOPLAY_REPLACE_END__*/\\n  )\\n  /*__DOT_BUTTONS_REPLACE_END__*/\\n\\n  /*__PREV_NEXT_BUTTONS_REPLACE_START__*/\\n  const {\\n    prevBtnDisabled,\\n    nextBtnDisabled,\\n    onPrevButtonClick,\\n    onNextButtonClick\\n  } = usePrevNextButtons(\\n    emblaApi,\\n    /*__NAV_AUTOPLAY_REPLACE_START__*/ onNavButtonClick /*__NAV_AUTOPLAY_REPLACE_END__*/\\n  )\\n  /*__PREV_NEXT_BUTTONS_REPLACE_END__*/\\n\\n  /*__SELECTED_SNAP_DISPLAY_REPLACE_START__*/\\n  const { selectedSnap, snapCount } = useSelectedSnapDisplay(emblaApi)\\n  /*__SELECTED_SNAP_DISPLAY_REPLACE_END__*/\\n\\n  return (\\n    <section\\n      className=\\\"embla\\\"\\n      /*__DIRECTION_RTL_REPLACE_START__*/ dir=\\\"rtl\\\" /*__DIRECTION_RTL_REPLACE_END__*/\\n    >\\n      <div className=\\\"embla__viewport\\\" ref={emblaRef}>\\n        <div className=\\\"embla__container\\\">\\n          {slides.map((index) => (\\n            <div className=\\\"embla__slide\\\" key={index}>\\n              <div className=\\\"embla__slide__number\\\">{index + 1}</div>\\n            </div>\\n          ))}\\n        </div>\\n      </div>\\n\\n      {/*__CONTROLS_REPLACE_START__*/}\\n      <div className=\\\"embla__controls\\\">\\n        {/*__PREV_NEXT_BUTTONS_REPLACE_START__*/}\\n        <div className=\\\"embla__buttons\\\">\\n          <PrevButton onClick={onPrevButtonClick} disabled={prevBtnDisabled} />\\n          <NextButton onClick={onNextButtonClick} disabled={nextBtnDisabled} />\\n        </div>\\n        {/*__PREV_NEXT_BUTTONS_REPLACE_END__*/}\\n\\n        {/*__DOT_BUTTONS_REPLACE_START__*/}\\n        <div className=\\\"embla__dots\\\">\\n          {scrollSnaps.map((_, index) => (\\n            <DotButton\\n              key={index}\\n              onClick={() => onDotButtonClick(index)}\\n              className={'embla__dot'.concat(\\n                index === selectedIndex ? ' embla__dot--selected' : ''\\n              )}\\n            />\\n          ))}\\n        </div>\\n        {/*__DOT_BUTTONS_REPLACE_END__*/}\\n\\n        {/*__SELECTED_SNAP_DISPLAY_REPLACE_START__*/}\\n        <SelectedSnapDisplay\\n          selectedSnap={selectedSnap}\\n          snapCount={snapCount}\\n        />\\n        {/*__SELECTED_SNAP_DISPLAY_REPLACE_END__*/}\\n      </div>\\n      {/*__CONTROLS_REPLACE_END__*/}\\n    </section>\\n  )\\n}\\n\\nexport default EmblaCarousel\\n\";"],"names":[],"sourceRoot":""}