"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[9421],{9421:function(e,n,a){a.r(n),n.default="import React, { useCallback, useEffect, useState } from 'react'\nimport { EmblaCarouselType } from 'embla-carousel'\n\ntype UseSelectedSnapDisplayType = {\n  selectedSnap: number\n  snapCount: number\n}\n\nexport const useSelectedSnapDisplay = (\n  emblaApi: EmblaCarouselType | undefined\n): UseSelectedSnapDisplayType => {\n  const [selectedSnap, setSelectedSnap] = useState(0)\n  const [snapCount, setSnapCount] = useState(0)\n\n  const updateScrollSnapState = useCallback((emblaApi: EmblaCarouselType) => {\n    setSnapCount(emblaApi.scrollSnapList().length)\n    setSelectedSnap(emblaApi.selectedScrollSnap())\n  }, [])\n\n  useEffect(() => {\n    if (!emblaApi) return\n\n    updateScrollSnapState(emblaApi)\n    emblaApi.on('select', updateScrollSnapState)\n    emblaApi.on('reInit', updateScrollSnapState)\n  }, [emblaApi, updateScrollSnapState])\n\n  return {\n    selectedSnap,\n    snapCount\n  }\n}\n\ntype PropType = {\n  selectedSnap: number\n  snapCount: number\n}\n\nexport const SelectedSnapDisplay: React.FC<PropType> = (props) => {\n  const { selectedSnap, snapCount } = props\n\n  return (\n    <div className=\"embla__selected-snap-display\">\n      {selectedSnap + 1} / {snapCount}\n    </div>\n  )\n}\n"}}]);
//# sourceMappingURL=9421-c347c4fd356ce2e90e59.js.map