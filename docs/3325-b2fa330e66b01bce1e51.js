"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[3325],{3325:function(n,t,a){a.r(t),t.default="\nexport const addPlayBtnListeners = (emblaApi, playBtn) => {\n    const togglePlayBtnState = (emblaApi) => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const buttonText = autoplay.isPlaying() ? 'Start' : 'Stop';\n        playBtn.innerHTML = buttonText;\n    };\n    \n    const onPlayBtnClick = () => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const playOrStop = autoplay.isPlaying() ? autoplay.stop : autoplay.play;\n        playOrStop();\n    };\n    \n    playBtn.addEventListener('click', onPlayBtnClick);\n    emblaApi\n        .on('autoplay:play', togglePlayBtnState)\n        .on('autoplay:stop', togglePlayBtnState)\n        .on('reInit', togglePlayBtnState);\n    \n    return () => {\n        playBtn.removeEventListener('click', onPlayBtnClick);\n        emblaApi\n            .off('autoplay:play', togglePlayBtnState)\n            .off('autoplay:stop', togglePlayBtnState)\n            .off('reInit', togglePlayBtnState);\n    };\n};\n\nexport const addNavBtnListeners = (emblaApi, ...navButtons) => {\n    const onNavClick = () => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const resetOrStop = autoplay.options.stopOnInteraction === false\n            ? autoplay.reset\n            : autoplay.stop;\n        \n        resetOrStop();\n    };\n    \n    navButtons.forEach((navButton) => navButton.addEventListener('click', onNavClick, true));\n    \n    return () => {\n        navButtons.forEach((navButton) => navButton.removeEventListener('click', onNavClick, true));\n    };\n};\n"}}]);
//# sourceMappingURL=3325-b2fa330e66b01bce1e51.js.map