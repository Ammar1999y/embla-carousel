"use strict";(self.webpackChunkembla_carousel_docs=self.webpackChunkembla_carousel_docs||[]).push([[6652],{6652:function(n,a,t){t.r(a),a.default="import React, { useCallback, useEffect, useState } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport { NextButton, PrevButton, usePrevNextButtons } from '../EmblaCarouselArrowButtons';\n\nconst EmblaCarousel = (props) => {\n    const { slides, options } = props;\n    const [emblaRef, emblaApi] = useEmblaCarousel(options, [\n        Autoplay({ playOnInit: false, delay: 3000 })\n    ]);\n    const [isPlaying, setIsPlaying] = useState(false);\n    \n    const { prevBtnDisabled, nextBtnDisabled, onPrevButtonClick, onNextButtonClick } = usePrevNextButtons(emblaApi);\n    \n    const onButtonAutoplayClick = useCallback((callback) => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const resetOrStop = autoplay.options.stopOnInteraction === false\n            ? autoplay.reset\n            : autoplay.stop;\n        \n        resetOrStop();\n        callback();\n    }, [emblaApi]);\n    \n    const toggleAutoplay = useCallback(() => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        const playOrStop = autoplay.isPlaying() ? autoplay.stop : autoplay.play;\n        playOrStop();\n    }, [emblaApi]);\n    \n    useEffect(() => {\n        const autoplay = emblaApi?.plugins()?.autoplay;\n        if (!autoplay)\n            return;\n        \n        setIsPlaying(autoplay.isPlaying());\n        emblaApi\n            .on('autoplay:play', () => setIsPlaying(true))\n            .on('autoplay:stop', () => setIsPlaying(false))\n            .on('reInit', () => setIsPlaying(autoplay.isPlaying()));\n    }, [emblaApi]);\n    \n    return (<div className=\"embla\">\n      <div className=\"embla__viewport\" ref={emblaRef}>\n        <div className=\"embla__container\">\n          {slides.map((index) => (<div className=\"embla__slide\" key={index}>\n              <div className=\"embla__slide__number\">\n                <span>{index + 1}</span>\n              </div>\n            </div>))}\n        </div>\n      </div>\n \n      <div className=\"embla__controls\">\n        <div className=\"embla__buttons\">\n          <PrevButton onClick={() => onButtonAutoplayClick(onPrevButtonClick)} disabled={prevBtnDisabled}/>\n          <NextButton onClick={() => onButtonAutoplayClick(onNextButtonClick)} disabled={nextBtnDisabled}/>\n        </div>\n \n        <button className=\"embla__play\" onClick={toggleAutoplay} type=\"button\">\n          {isPlaying ? 'Stop' : 'Start'}\n        </button>\n      </div>\n    </div>);\n};\n\nexport default EmblaCarousel;\n"}}]);
//# sourceMappingURL=6652-ce667492b1461854b2aa.js.map