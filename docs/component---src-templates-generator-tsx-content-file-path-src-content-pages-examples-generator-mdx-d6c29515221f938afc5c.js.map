{"version":3,"file":"component---src-templates-generator-tsx-content-file-path-src-content-pages-examples-generator-mdx-d6c29515221f938afc5c.js","mappings":"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","sources":["webpack://embla-carousel-docs/./src/hooks/useCarouselGenerator.ts","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFrameworkSettings.tsx","webpack://embla-carousel-docs/./src/components/Input/InputCheckbox.tsx","webpack://embla-carousel-docs/./src/components/Input/InputText.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorFormItems.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorBasicSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSlidesSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorAlignmentSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorNavigationSettings.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorPlugins.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSubmit.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorCarousel.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorPreview.tsx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorSupport.tsx","webpack://embla-carousel-docs/./src/content/pages/examples/generator.mdx","webpack://embla-carousel-docs/./src/components/CarouselGenerator/CarouselGeneratorForm.tsx","webpack://embla-carousel-docs/./src/templates/Default.tsx","webpack://embla-carousel-docs/./src/templates/Generator.tsx"],"sourcesContent":["import { useContext } from 'react'\nimport {\n  CarouselGeneratorContext,\n  CarouselGeneratorContextType\n} from 'components/CarouselGenerator/CarouselGeneratorContext'\n\nexport const useCarouselGenerator = (): CarouselGeneratorContextType =>\n  useContext(CarouselGeneratorContext)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { dynamicGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\nimport { SandboxSelectionInput } from 'components/Sandbox/SandboxSelectionInput'\nimport { snakeCaseToKebabCase } from 'utils/stringCasing'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { SANDBOX_SELECTION_SPACING } from 'consts/sandbox'\nimport {\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_FRAMEWORK: SandboxGeneratorRadioType<'framework'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.FRAMEWORK),\n  OPTIONS: []\n}\n\nconst SandboxSelectionList = styled.ul`\n  ${createGapStyles(\n    SANDBOX_SELECTION_SPACING,\n    SANDBOX_SELECTION_SPACING,\n    'li'\n  )};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n`\n\nexport const CarouselGeneratorFrameworkSettings = () => {\n  const { formData, onRadioChange } = useCarouselGenerator()\n\n  return (\n    <div>\n      <SandboxSelectionList role=\"radiogroup\" aria-label={INPUT_FRAMEWORK.ID}>\n        {dynamicGeneratorSandboxes.map((sandbox) => (\n          <li key={sandbox.key}>\n            <SandboxSelectionInput\n              framework={sandbox.key}\n              name={INPUT_FRAMEWORK.FIELD_NAME}\n              id={`${INPUT_FRAMEWORK.ID}-${snakeCaseToKebabCase(sandbox.key)}`}\n              value={sandbox.key}\n              onChange={onRadioChange}\n              checked={formData[INPUT_FRAMEWORK.FIELD_NAME] === sandbox.key}\n            >\n              {sandbox.label}\n            </SandboxSelectionInput>\n          </li>\n        ))}\n      </SandboxSelectionList>\n    </div>\n  )\n}\n","import { createRadioOrCheckboxDefault } from './createRadioOrCheckboxDefault'\nimport { createRadioOrCheckboxCard } from './createRadioOrCheckboxCard'\n\nexport const InputCheckboxDefault = createRadioOrCheckboxDefault('checkbox')\n\nexport const InputCheckboxCard = createRadioOrCheckboxCard('checkbox')\n","import React, { PropsWithRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { COLORS } from 'consts/themes'\nimport { useKeyNavigating } from 'hooks/useKeyNavigating'\nimport { SPACINGS } from 'consts/spacings'\nimport { FONT_SIZES } from 'consts/fontSizes'\nimport { LAYERS } from 'consts/layers'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { TAP_HIGHLIGHT_STYLES } from 'consts/tapHighlight'\nimport { KEY_NAVIGATING_STYLES } from 'consts/keyNavigatingStyles'\n\nconst HEIGHT = SPACINGS.EIGHT\nconst SIDES_PADDING = SPACINGS.THREE\nconst INPUT_RADIUS = BORDER_RADIUSES.BOX\n\nconst InputTextWrapper = styled.span`\n  height: ${HEIGHT};\n  border-radius: ${INPUT_RADIUS};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n  background-color: ${COLORS.BACKGROUND_CODE};\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst labelActiveStyles = css`\n  transform: translateY(calc(-100% / 2)) scale(0.8);\n`\n\nconst Label = styled.label`\n  z-index: ${LAYERS.STEP};\n  left: ${SIDES_PADDING};\n  color: ${COLORS.TEXT_LOW_CONTRAST};\n  position: absolute;\n  top: 0;\n  pointer-events: none;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  transition: transform 0.2s;\n  transform-origin: center left;\n`\n\nconst labelTextActiveStyles = css`\n  background-color: ${COLORS.BACKGROUND_CODE};\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n`\n\nconst LabelText = styled.span`\n  padding-left: ${SPACINGS.ONE};\n  padding-right: ${SPACINGS.ONE};\n  border-radius: ${INPUT_RADIUS};\n  z-index: ${LAYERS.STEP};\n  display: flex;\n  position: relative;\n  align-items: center;\n`\n\nconst Highlight = styled.span`\n  ${BRAND_GRADIENT_BACKGROUND_STYLES};\n  top: -${BORDER_SIZES.DETAIL};\n  left: -${BORDER_SIZES.DETAIL};\n  bottom: -${BORDER_SIZES.DETAIL};\n  right: -${BORDER_SIZES.DETAIL};\n  display: block;\n  position: absolute;\n  border-radius: inherit;\n  pointer-events: none;\n  visibility: hidden;\n\n  &:after {\n    background-color: ${COLORS.BACKGROUND_CODE};\n    border-radius: inherit;\n    position: absolute;\n    top: ${BORDER_SIZES.OUTLINE};\n    left: ${BORDER_SIZES.OUTLINE};\n    bottom: ${BORDER_SIZES.OUTLINE};\n    right: ${BORDER_SIZES.OUTLINE};\n    content: '';\n  }\n`\n\nconst Input = styled.input<{\n  $isKeyNavigating: boolean\n  $inputHasValue: boolean\n}>`\n  ${TAP_HIGHLIGHT_STYLES};\n  ${KEY_NAVIGATING_STYLES};\n  z-index: ${LAYERS.STEP};\n  height: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  width: calc(100% - ${BORDER_SIZES.DETAIL} * 2);\n  color: ${COLORS.TEXT_BODY};\n  font-size: ${FONT_SIZES.BODY};\n  padding: 0 ${SIDES_PADDING};\n  background-color: transparent;\n  appearance: none;\n  -webkit-appearance: none;\n  border-radius: inherit;\n  border: 0;\n\n  &:focus + ${Highlight} + ${Label} {\n    ${labelActiveStyles};\n\n    > ${LabelText} {\n      ${labelTextActiveStyles};\n    }\n  }\n\n  &:focus + ${Highlight} {\n    visibility: visible;\n  }\n\n  ${({ $inputHasValue }) =>\n    $inputHasValue &&\n    css`\n      & + ${Highlight} + ${Label} {\n        ${labelActiveStyles};\n\n        > ${LabelText} {\n          ${labelTextActiveStyles};\n        }\n      }\n    `};\n`\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >\n>\n\nexport const InputText = (props: PropType) => {\n  const { children, className, ...restProps } = props\n  const { isKeyNavigating } = useKeyNavigating()\n\n  return (\n    <InputTextWrapper className={className}>\n      <Input\n        $isKeyNavigating={isKeyNavigating}\n        $inputHasValue={!!restProps.value}\n        type=\"text\"\n        {...restProps}\n      />\n      <Highlight />\n      <Label>\n        <LabelText>{children}</LabelText>\n      </Label>\n    </InputTextWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { SPACINGS } from 'consts/spacings'\nimport { createGapStyles } from 'utils/createGapStyles'\nimport { MEDIA } from 'consts/breakpoints'\nimport { InputText } from 'components/Input/InputText'\n\nexport const FORM_INPUT_TEXT_MAX_SIZE = '26rem'\n\nexport const FORM_ITEM_SPACING_X = SPACINGS.FOUR\nexport const FORM_ITEM_SPACING_Y = SPACINGS.TWO\n\nexport const FORM_ITEMS_GAP_STYLES = createGapStyles(\n  FORM_ITEM_SPACING_X,\n  FORM_ITEM_SPACING_Y,\n  '*'\n)\n\nexport const FORM_ITEM_MAX_WIDTH_STYLES = css`\n  width: 100%;\n\n  ${MEDIA.MIN_XS} {\n    max-width: 100%;\n    width: ${FORM_INPUT_TEXT_MAX_SIZE};\n  }\n`\n\nexport const CarouselGeneratorFormItems = styled.div`\n  ${FORM_ITEMS_GAP_STYLES};\n  margin-bottom: calc(${FORM_ITEM_SPACING_X} - ${FORM_ITEM_SPACING_Y});\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport const CarouselGeneratorFormItem = styled.div`\n  margin-bottom: ${FORM_ITEM_SPACING_X};\n`\n\nexport const CarouselGeneratorInputText = styled(InputText)`\n  ${FORM_ITEM_MAX_WIDTH_STYLES};\n`\n","import React, { useEffect } from 'react'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport {\n  SandboxGeneratorCheckboxType,\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\n\nconst INPUT_AXIS: SandboxGeneratorRadioType<'axis'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.AXIS),\n  OPTIONS: [\n    { LABEL: 'Horizontal', VALUE: 'x' },\n    { LABEL: 'Vertical', VALUE: 'y' }\n  ]\n}\n\nconst INPUT_DIRECTION: SandboxGeneratorRadioType<'direction'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.DIRECTION),\n  OPTIONS: [\n    { LABEL: 'Left to right', VALUE: 'ltr' },\n    { LABEL: 'Right to left', VALUE: 'rtl' }\n  ]\n}\n\nconst INPUT_LOOP: SandboxGeneratorCheckboxType<'loop'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.LOOP),\n  LABEL: 'Loop'\n}\n\nconst INPUT_DRAG_FREE: SandboxGeneratorCheckboxType<'dragFree'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.DRAG_FREE),\n  LABEL: 'Drag free'\n}\n\nconst INPUT_ACCESSIBILITY: SandboxGeneratorCheckboxType<'accessibility'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.ACCESSIBILITY),\n  LABEL: 'Accessibility (under development)'\n}\n\nexport const CarouselGeneratorBasicSettings = () => {\n  const { formData, onCheckboxChange, onRadioChange, onChange } =\n    useCarouselGenerator()\n  const axis = formData[SANDBOX_GENERATOR_FORM_FIELDS.AXIS]\n\n  useEffect(() => {\n    if (axis === 'y') onChange(SANDBOX_GENERATOR_FORM_FIELDS.DIRECTION, 'ltr')\n  }, [axis])\n\n  return (\n    <>\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_AXIS.ID}>\n        {INPUT_AXIS.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={VALUE}>\n            <InputRadioDefault\n              name={INPUT_AXIS.FIELD_NAME}\n              id={`${INPUT_AXIS.ID}-${VALUE}`}\n              value={VALUE}\n              checked={formData[INPUT_AXIS.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      {axis === 'x' && (\n        <CarouselGeneratorFormItems\n          role=\"radiogroup\"\n          aria-label={INPUT_DIRECTION.ID}\n        >\n          {INPUT_DIRECTION.OPTIONS.map(({ VALUE, LABEL }) => (\n            <div key={VALUE}>\n              <InputRadioDefault\n                name={INPUT_DIRECTION.FIELD_NAME}\n                id={`${INPUT_DIRECTION.ID}-${VALUE}`}\n                value={VALUE}\n                checked={formData[INPUT_DIRECTION.FIELD_NAME] === VALUE}\n                onChange={onRadioChange}\n              >\n                {LABEL}\n              </InputRadioDefault>\n            </div>\n          ))}\n        </CarouselGeneratorFormItems>\n      )}\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_LOOP.FIELD_NAME}\n          id={INPUT_LOOP.ID}\n          checked={formData[INPUT_LOOP.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_LOOP.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DRAG_FREE.FIELD_NAME}\n          id={INPUT_DRAG_FREE.ID}\n          checked={formData[INPUT_DRAG_FREE.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DRAG_FREE.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_ACCESSIBILITY.FIELD_NAME}\n          id={INPUT_ACCESSIBILITY.ID}\n          checked={formData[INPUT_ACCESSIBILITY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_ACCESSIBILITY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport {\n  SANDBOX_GENERATOR_FORM_FIELDS,\n  SandboxGeneratorSettingsType\n} from 'consts/sandbox'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorInputText\n} from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorCheckboxType,\n  SandboxGeneratorInputTextType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\n\nconst INPUT_SLIDE_SIZE: SandboxGeneratorInputTextType<'slideSize'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_SIZE),\n  LABEL: 'Slide size (%)'\n}\n\nconst INPUT_SLIDE_GAP_SIZE: SandboxGeneratorInputTextType<'slideGapSize'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_GAP_SIZE\n  ),\n  LABEL: 'Slide gaps (px)'\n}\n\nconst INPUT_SLIDES_TO_SCROLL: SandboxGeneratorCheckboxType<'slidesToScroll'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.SLIDES_TO_SCROLL\n  ),\n  LABEL: 'Group slides'\n}\n\nexport const CarouselGeneratorSlidesSettings = () => {\n  const { formData, onNumberChange, onChange, onNumberBlur } =\n    useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"10\"\n          max=\"100\"\n          name={INPUT_SLIDE_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_SIZE.ID}\n          value={formData[INPUT_SLIDE_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <CarouselGeneratorInputText\n          type=\"number\"\n          min=\"0\"\n          max=\"20\"\n          name={INPUT_SLIDE_GAP_SIZE.FIELD_NAME}\n          id={INPUT_SLIDE_GAP_SIZE.ID}\n          value={formData[INPUT_SLIDE_GAP_SIZE.FIELD_NAME]}\n          onChange={onNumberChange}\n          onBlur={onNumberBlur}\n        >\n          {INPUT_SLIDE_GAP_SIZE.LABEL}\n        </CarouselGeneratorInputText>\n      </CarouselGeneratorFormItem>\n\n      {parseInt(formData.slideSize) <= 50 && (\n        <CarouselGeneratorFormItem>\n          <InputCheckboxDefault\n            name={INPUT_SLIDES_TO_SCROLL.FIELD_NAME}\n            id={INPUT_SLIDES_TO_SCROLL.ID}\n            checked={formData[INPUT_SLIDES_TO_SCROLL.FIELD_NAME] === 'auto'}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const { name, checked } = event.currentTarget\n              const fieldName = name as keyof SandboxGeneratorSettingsType\n              onChange(fieldName, checked ? 'auto' : 1)\n            }}\n          >\n            {INPUT_SLIDES_TO_SCROLL.LABEL}\n          </InputCheckboxDefault>\n        </CarouselGeneratorFormItem>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { InputRadioDefault } from 'components/Input/InputRadio'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { Admonition } from 'components/Mdx/Components/Admonition'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport {\n  SANDBOX_GENERATOR_FORM_FIELDS,\n  SandboxGeneratorSettingsType\n} from 'consts/sandbox'\nimport {\n  CarouselGeneratorFormItem,\n  CarouselGeneratorFormItems\n} from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorCheckboxType,\n  SandboxGeneratorRadioType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_ALIGN: SandboxGeneratorRadioType<'align'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.ALIGN),\n  OPTIONS: [\n    { LABEL: 'Start', VALUE: 'start' },\n    { LABEL: 'Center', VALUE: 'center' },\n    { LABEL: 'End', VALUE: 'end' }\n  ]\n}\n\nconst INPUT_CONTAIN_SCROLL: SandboxGeneratorCheckboxType<'containScroll'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.CONTAIN_SCROLL\n  ),\n  LABEL: 'Clear leading and trailing space'\n}\n\nexport const CarouselGeneratorAlignmentSettings = () => {\n  const { formData, onChange, onRadioChange } = useCarouselGenerator()\n  const slideSize = formData[SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_SIZE]\n  const loop = formData[SANDBOX_GENERATOR_FORM_FIELDS.LOOP]\n\n  return (\n    <>\n      {slideSize === '100' && (\n        <Admonition type=\"note\">\n          Aligment settings will only make a visual <strong>difference</strong>{' '}\n          for carousels with slide sizes <strong>less than 100%</strong>.\n        </Admonition>\n      )}\n\n      <CarouselGeneratorFormItems role=\"radiogroup\" aria-label={INPUT_ALIGN.ID}>\n        {INPUT_ALIGN.OPTIONS.map(({ VALUE, LABEL }) => (\n          <div key={LABEL}>\n            <InputRadioDefault\n              name={INPUT_ALIGN.FIELD_NAME}\n              id={`${INPUT_ALIGN.ID}-${VALUE}`}\n              value={VALUE as string}\n              checked={formData[INPUT_ALIGN.FIELD_NAME] === VALUE}\n              onChange={onRadioChange}\n            >\n              {LABEL}\n            </InputRadioDefault>\n          </div>\n        ))}\n      </CarouselGeneratorFormItems>\n\n      {!loop && (\n        <CarouselGeneratorFormItem>\n          <InputCheckboxDefault\n            name={INPUT_CONTAIN_SCROLL.FIELD_NAME}\n            id={INPUT_CONTAIN_SCROLL.ID}\n            checked={formData[INPUT_CONTAIN_SCROLL.FIELD_NAME] === 'trimSnaps'}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const { name, checked } = event.currentTarget\n              const fieldName = name as keyof SandboxGeneratorSettingsType\n              onChange(fieldName, checked ? 'trimSnaps' : false)\n            }}\n          >\n            {INPUT_CONTAIN_SCROLL.LABEL}\n          </InputCheckboxDefault>\n        </CarouselGeneratorFormItem>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport {\n  SandboxGeneratorCheckboxType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_PREV_NEXT_BUTTONS: SandboxGeneratorCheckboxType<'navigationPrevNextButtons'> =\n  {\n    ...createSandboxGeneratorInputId(\n      SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_PREV_NEXT_BUTTONS\n    ),\n    LABEL: 'Previous and next buttons'\n  }\n\nconst INPUT_DOTS: SandboxGeneratorCheckboxType<'navigationDots'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_DOTS\n  ),\n  LABEL: 'Dot navigation'\n}\n\nexport const CarouselGeneratorNavigationSettings = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_PREV_NEXT_BUTTONS.FIELD_NAME}\n          id={INPUT_PREV_NEXT_BUTTONS.ID}\n          checked={formData[INPUT_PREV_NEXT_BUTTONS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_PREV_NEXT_BUTTONS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_DOTS.FIELD_NAME}\n          id={INPUT_DOTS.ID}\n          checked={formData[INPUT_DOTS.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_DOTS.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React from 'react'\nimport { InputCheckboxDefault } from 'components/Input/InputCheckbox'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { CarouselGeneratorFormItem } from './CarouselGeneratorFormItems'\nimport {\n  SandboxGeneratorCheckboxType,\n  createSandboxGeneratorInputId\n} from 'utils/sandbox'\n\nconst INPUT_AUTOPLAY: SandboxGeneratorCheckboxType<'autoplay'> = {\n  ...createSandboxGeneratorInputId(SANDBOX_GENERATOR_FORM_FIELDS.AUTOPLAY),\n  LABEL: 'Autoplay'\n}\n\nconst INPUT_WHEEL_GESTURES: SandboxGeneratorCheckboxType<'wheelGestures'> = {\n  ...createSandboxGeneratorInputId(\n    SANDBOX_GENERATOR_FORM_FIELDS.WHEEL_GESTURES\n  ),\n  LABEL: 'Wheel gestures (under development)'\n}\n\nexport const CarouselGeneratorPlugins = () => {\n  const { formData, onCheckboxChange } = useCarouselGenerator()\n\n  return (\n    <>\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_AUTOPLAY.FIELD_NAME}\n          id={INPUT_AUTOPLAY.ID}\n          checked={formData[INPUT_AUTOPLAY.FIELD_NAME]}\n          onChange={onCheckboxChange}\n        >\n          {INPUT_AUTOPLAY.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n\n      <CarouselGeneratorFormItem>\n        <InputCheckboxDefault\n          name={INPUT_WHEEL_GESTURES.FIELD_NAME}\n          id={INPUT_WHEEL_GESTURES.ID}\n          checked={formData[INPUT_WHEEL_GESTURES.FIELD_NAME]}\n          onChange={onCheckboxChange}\n          disabled\n        >\n          {INPUT_WHEEL_GESTURES.LABEL}\n        </InputCheckboxDefault>\n      </CarouselGeneratorFormItem>\n    </>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { ButtonPrimaryFilledWithLoading } from 'components/Button/ButtonPrimaryFilled'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SandboxLabelKeyType } from 'consts/sandbox'\nimport { SandboxGeneratorSettingsType } from 'consts/sandbox'\nimport { dynamicGeneratorSandboxes } from 'components/Sandbox/sandboxGenerator'\n\nexport const CarouselGeneratorSubmit = () => {\n  const { formData } = useCarouselGenerator()\n  const [sandbox, setSandbox] = useState('')\n  const sandboxKey = formData.framework\n  const isLoading = !!(sandboxKey && !sandbox)\n\n  const loadSandbox = useCallback(\n    async (\n      key: SandboxLabelKeyType,\n      settings: SandboxGeneratorSettingsType\n    ) => {\n      const sandbox = dynamicGeneratorSandboxes.find(\n        (sandbox) => sandbox.key === key\n      )\n      if (sandbox) setSandbox(await sandbox.createSandbox(settings))\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (sandboxKey) {\n      setSandbox('')\n      loadSandbox(sandboxKey, formData)\n    }\n  }, [sandboxKey, formData])\n\n  return (\n    <>\n      <input type=\"hidden\" name=\"parameters\" value={sandbox} />\n\n      <ButtonPrimaryFilledWithLoading\n        isLoading={isLoading}\n        disabled={!sandbox}\n        type=\"submit\"\n      >\n        Create Sandbox\n      </ButtonPrimaryFilledWithLoading>\n    </>\n  )\n}\n","import React, { useMemo, useRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { SandboxGeneratorExample } from 'components/Sandbox/SandboxGeneratorExample'\nimport { arrayFromNumber } from 'utils/arrayFromNumber'\nimport { styledComponentsStylesToString } from 'utils/styledComponentStylesToString'\nimport { useCarouselGenerator } from 'hooks/useCarouselGenerator'\nimport { SANDBOX_GENERATOR_FORM_FIELDS } from 'consts/sandbox'\nimport { BRAND_GRADIENT_BACKGROUND_STYLES } from 'consts/gradients'\nimport { BORDER_RADIUSES, BORDER_SIZES } from 'consts/border'\nimport { EmblaOptionsType } from 'embla-carousel'\nimport { LAYERS } from 'consts/layers'\nimport { COLORS } from 'consts/themes'\nimport { SPACINGS } from 'consts/spacings'\nimport {\n  ARROWS_STYLES,\n  CONTROLS_STYLES,\n  DOTS_STYLES,\n  SLIDE_NUMBER_STYLES,\n  examplesCarouselDefaultStyles\n} from 'components/Examples/examplesCarouselStyles'\n\nconst CAROUSEL_ID = 'carousel-generator-carousel'\n\nconst CarouselGeneratorCarouselWrapper = styled.div<{\n  $carouselStyles: string\n  $align: EmblaOptionsType['align']\n  $direction: EmblaOptionsType['direction']\n  $axis: EmblaOptionsType['axis']\n  $slideSize: string\n  $previewLarge: boolean\n}>`\n  transform: ${({ $previewLarge }) => `scale(${$previewLarge ? 1 : 0.52})`};\n  transform-origin: bottom right;\n  position: relative;\n  width: 100%;\n  justify-self: flex-end;\n  border: ${BORDER_SIZES.DETAIL} solid ${COLORS.DETAIL_LOW_CONTRAST};\n  background-color: ${COLORS.BACKGROUND_SITE};\n  padding: ${SPACINGS.THREE};\n  border-radius: ${BORDER_RADIUSES.SOFT};\n\n  &.${CAROUSEL_ID} {\n    ${({ $carouselStyles }) =>\n      css`\n        ${$carouselStyles};\n      `};\n\n    .embla {\n      max-width: none;\n    }\n\n    .embla__viewport {\n      position: relative;\n\n      &:before {\n        display: ${({ $slideSize }) => {\n          const fullWidthSlides = parseFloat($slideSize) === 100\n          return fullWidthSlides ? 'none' : 'block'\n        }};\n        ${BRAND_GRADIENT_BACKGROUND_STYLES};\n        z-index: ${LAYERS.STEP};\n        opacity: 0.7;\n        position: absolute;\n        content: '';\n        border-radius: ${BORDER_RADIUSES.LINE};\n\n        ${({ $axis, $align, $direction }) => {\n          if ($axis === 'x') {\n            const baseStyles = css`\n              width: ${BORDER_SIZES.ACCENT_VERTICAL};\n              top: 0;\n              bottom: 0;\n            `\n\n            if ($align === 'start') {\n              const property = $direction === 'rtl' ? 'right' : 'left'\n              return css`\n                ${baseStyles};\n                ${property}: 0;\n              `\n            }\n            if ($align === 'end') {\n              const property = $direction === 'rtl' ? 'left' : 'right'\n              return css`\n                ${baseStyles};\n                ${property}: 0;\n              `\n            }\n            return css`\n              ${baseStyles};\n              left: 50%;\n              margin-left: calc(-${BORDER_SIZES.ACCENT_VERTICAL} / 2);\n            `\n          }\n\n          if ($axis === 'y') {\n            const basePositioning = css`\n              height: ${BORDER_SIZES.ACCENT_VERTICAL};\n              left: 0;\n              right: 0;\n            `\n\n            if ($align === 'start') {\n              return css`\n                ${basePositioning};\n                top: 0;\n              `\n            }\n            if ($align === 'end') {\n              return css`\n                ${basePositioning};\n                bottom: 0;\n              `\n            }\n            return css`\n              ${basePositioning};\n              top: 50%;\n              margin-top: calc(-${BORDER_SIZES.ACCENT_VERTICAL} / 2);\n            `\n          }\n        }};\n      }\n    }\n\n    .embla__slide__number,\n    .embla__button,\n    .embla__dot::after {\n      background-color: ${COLORS.BACKGROUND_SITE};\n    }\n  }\n`\n\nconst CarouselWrapper = styled.div`\n  pointer-events: auto;\n`\n\ntype PropType = {\n  previewLarge: boolean\n}\n\nexport const CarouselGeneratorCarousel = (props: PropType) => {\n  const { previewLarge } = props\n  const { formData } = useCarouselGenerator()\n  const slideSize = formData[SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_SIZE]\n  const slideGapSize = formData[SANDBOX_GENERATOR_FORM_FIELDS.SLIDE_GAP_SIZE]\n  const navigationDots = formData[SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_DOTS]\n  const navigationPrevNextButtons =\n    formData[SANDBOX_GENERATOR_FORM_FIELDS.NAVIGATION_PREV_NEXT_BUTTONS]\n  const axis = formData[SANDBOX_GENERATOR_FORM_FIELDS.AXIS]\n  const slides = useRef(arrayFromNumber(5))\n\n  const carouselStyles = useMemo(() => {\n    return examplesCarouselDefaultStyles(\n      `${slideSize}%`,\n      `${parseInt(slideGapSize) / 10}rem`,\n      axis,\n      styledComponentsStylesToString(\n        SLIDE_NUMBER_STYLES,\n        CONTROLS_STYLES,\n        ARROWS_STYLES,\n        DOTS_STYLES\n      )\n    )\n  }, [slideSize, slideGapSize, axis])\n\n  return (\n    <CarouselGeneratorCarouselWrapper\n      $carouselStyles={carouselStyles}\n      $align={formData.align}\n      $direction={formData.direction}\n      $slideSize={slideSize}\n      $previewLarge={previewLarge}\n      $axis={axis}\n      className={CAROUSEL_ID}\n    >\n      <CarouselWrapper>\n        <SandboxGeneratorExample\n          options={{\n            loop: formData.loop,\n            dragFree: formData.dragFree,\n            containScroll: formData.containScroll,\n            align: formData.align,\n            direction: formData.direction,\n            axis: formData.axis,\n            slidesToScroll: formData.slidesToScroll\n          }}\n          slides={slides.current}\n          navigationPrevNextButtons={navigationPrevNextButtons}\n          navigationDots={navigationDots}\n          autoplay={formData.autoplay}\n        />\n      </CarouselWrapper>\n    </CarouselGeneratorCarouselWrapper>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { CarouselGeneratorSubmit } from './CarouselGeneratorSubmit'\nimport { CarouselGeneratorCarousel } from './CarouselGeneratorCarousel'\nimport { Icon } from 'components/Icon/Icon'\nimport { visuallyHiddenStyles } from 'utils/visuallyHiddenStyles'\nimport { LAYERS } from 'consts/layers'\nimport { MEDIA } from 'consts/breakpoints'\nimport { PAGE_FRAME_SPACING } from 'components/Page/PageFrame'\nimport { SPACINGS } from 'consts/spacings'\nimport { COLORS } from 'consts/themes'\nimport { BUTTON_SIZES } from 'consts/buttons'\nimport { BORDER_SIZES } from 'consts/border'\nimport { ButtonBare, ButtonBareText } from 'components/Button/ButtonBare'\nimport {\n  MAIN_CONTENT_SPACING,\n  SIDEBAR_LG_DOWN_WIDTH,\n  SIDEBAR_LG_UP_WIDTH\n} from 'components/Page/PageGrid'\n\nconst PREVIEW_WRAPPER_MAX_WIDTH = '52rem'\n\nconst CarouselGeneratorPreviewWrapper = styled.div<{\n  $previewLarge: boolean\n}>`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  bottom: 0;\n  z-index: ${LAYERS.HEADER};\n  width: ${PREVIEW_WRAPPER_MAX_WIDTH};\n  pointer-events: none;\n  right: ${PAGE_FRAME_SPACING};\n  max-width: calc(100% - ${PAGE_FRAME_SPACING} * 2);\n\n  ${MEDIA.DESKTOP} {\n    right: calc(\n      ${SIDEBAR_LG_DOWN_WIDTH} + ${MAIN_CONTENT_SPACING} + ${PAGE_FRAME_SPACING}\n    );\n    max-width: calc(\n      100% - ${SIDEBAR_LG_DOWN_WIDTH} * 2 - ${MAIN_CONTENT_SPACING} * 2 -\n        ${PAGE_FRAME_SPACING} * 2\n    );\n  }\n  ${MEDIA.MIN_LG} {\n    right: calc(\n      ${SIDEBAR_LG_UP_WIDTH} + ${MAIN_CONTENT_SPACING} + ${PAGE_FRAME_SPACING}\n    );\n  }\n`\n\nconst ButtonsWrapper = styled.ul<{\n  $previewLarge: boolean\n}>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding-top: ${SPACINGS.THREE};\n  padding-bottom: ${SPACINGS.THREE};\n  pointer-events: auto;\n  width: 26rem;\n`\n\nconst PreviewSizeButton = styled(ButtonBare)`\n  ${BUTTON_SIZES.MD};\n  box-shadow: 0 0 0 ${BORDER_SIZES.OUTLINE} ${COLORS.TEXT_MEDIUM_CONTRAST} inset;\n  background-color: ${COLORS.BACKGROUND_SITE};\n  line-height: 1.15;\n  display: inline-flex;\n  align-items: center;\n  margin-right: ${SPACINGS.TWO};\n\n  ${ButtonBareText} {\n    display: flex;\n    align-items: center;\n  }\n`\n\nconst PreviewSizeButtonText = styled.span`\n  ${visuallyHiddenStyles};\n`\n\nexport const CarouselGeneratorPreview = () => {\n  const [previewLarge, setPreviewLarge] = useState(false)\n\n  const togglePreviewSize = useCallback(() => {\n    setPreviewLarge((currentSize) => !currentSize)\n  }, [])\n\n  return (\n    <CarouselGeneratorPreviewWrapper $previewLarge={previewLarge}>\n      <CarouselGeneratorCarousel previewLarge={previewLarge} />\n\n      <ButtonsWrapper $previewLarge={previewLarge}>\n        <li>\n          <PreviewSizeButton type=\"button\" onClick={togglePreviewSize}>\n            <Icon\n              svg={previewLarge ? 'shrink' : 'expand'}\n              size={SPACINGS.THREE}\n            />\n            <PreviewSizeButtonText>\n              {previewLarge ? 'Shrink' : 'Expand'} carousel preview\n            </PreviewSizeButtonText>\n          </PreviewSizeButton>\n        </li>\n        <li>\n          <CarouselGeneratorSubmit />\n        </li>\n      </ButtonsWrapper>\n    </CarouselGeneratorPreviewWrapper>\n  )\n}\n","import React from 'react'\nimport { LinkContent } from 'components/Link/LinkContent'\nimport { URLS } from 'consts/urls'\n\nexport const CarouselGeneratorSupport = () => {\n  return (\n    <ul>\n      <li>\n        <LinkContent to={URLS.DONATE_PAYPAL}>PayPal</LinkContent>\n      </li>\n      <li>\n        <LinkContent to={URLS.DONATE_KO_FI}>Ko-fi</LinkContent>\n      </li>\n    </ul>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {CarouselGeneratorFrameworkSettings} from 'components/CarouselGenerator/CarouselGeneratorFrameworkSettings';\nimport {CarouselGeneratorBasicSettings} from 'components/CarouselGenerator/CarouselGeneratorBasicSettings';\nimport {CarouselGeneratorSlidesSettings} from 'components/CarouselGenerator/CarouselGeneratorSlidesSettings';\nimport {CarouselGeneratorAlignmentSettings} from 'components/CarouselGenerator/CarouselGeneratorAlignmentSettings';\nimport {CarouselGeneratorNavigationSettings} from 'components/CarouselGenerator/CarouselGeneratorNavigationSettings';\nimport {CarouselGeneratorPlugins} from 'components/CarouselGenerator/CarouselGeneratorPlugins';\nimport {CarouselGeneratorPreview} from 'components/CarouselGenerator/CarouselGeneratorPreview';\nimport {CarouselGeneratorSupport} from 'components/CarouselGenerator/CarouselGeneratorSupport';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Carousel generator\"), \"\\n\", React.createElement(_components.p, null, \"Just follow the instructions and create your own customized carousel setup in no time!\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"choose-framework\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#choose-framework\",\n    \"aria-label\": \"choose framework permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Choose framework\"), \"\\n\", React.createElement(CarouselGeneratorFrameworkSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"basic-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#basic-settings\",\n    \"aria-label\": \"basic settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Basic settings\"), \"\\n\", React.createElement(CarouselGeneratorBasicSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"navigation-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#navigation-settings\",\n    \"aria-label\": \"navigation settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Navigation settings\"), \"\\n\", React.createElement(CarouselGeneratorNavigationSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"slide-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#slide-settings\",\n    \"aria-label\": \"slide settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Slide settings\"), \"\\n\", React.createElement(CarouselGeneratorSlidesSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"alignment-settings\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#alignment-settings\",\n    \"aria-label\": \"alignment settings permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Alignment settings\"), \"\\n\", React.createElement(CarouselGeneratorAlignmentSettings), \"\\n\", React.createElement(_components.h2, {\n    id: \"plugins\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Plugins\"), \"\\n\", React.createElement(CarouselGeneratorPlugins), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"support\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#support\",\n    \"aria-label\": \"support permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg viewBox=\\\"0 0 16 16\\\" aria-hidden=\\\"true\\\"><path d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\" fill=\\\"currentColor\\\" /></svg>\"\n    }\n  })), \"Support\"), \"\\n\", React.createElement(_components.p, null, \"Did this save you time? Don't say thank you! \", React.createElement(_components.strong, null, \"Share\"), \" it, \", React.createElement(_components.strong, null, \"star\"), \" it or \", React.createElement(_components.strong, null, \"support\"), \" this project:\"), \"\\n\", React.createElement(CarouselGeneratorSupport), \"\\n\", React.createElement(CarouselGeneratorPreview));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { PropsWithRef } from 'react'\nimport { URLS } from 'consts/urls'\n\ntype PropType = PropsWithRef<\n  React.DetailedHTMLProps<\n    React.FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n  >\n>\n\nexport const CarouselGeneratorForm = (props: PropType) => {\n  const { children, ...restProps } = props\n\n  return (\n    <form\n      action={URLS.CODESANDBOX_DEFINE}\n      method=\"POST\"\n      target=\"_blank\"\n      {...restProps}\n    >\n      {children}\n    </form>\n  )\n}\n","import React, { PropsWithChildren, useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport { Seo } from 'components/Seo/Seo'\nimport maskable from 'assets/images/maskable.png'\nimport { useSiteMetadata } from 'hooks/useSiteMetadata'\nimport { PageEditThisPage } from 'components/Page/PageEditThisPage'\nimport { PagePagination } from 'components/Page/PagePagination'\nimport { PageBreadcrumbs } from 'components/Page/PageBreadcrumbs'\nimport { MAIN_CONTENT_ID } from 'components/KeyNavigating/KeyNavigatingSkipToContent'\nimport { removeProtocol } from 'utils/removeProtocol'\nimport { Mdx } from 'components/Mdx/Mdx'\nimport {\n  PagePropType,\n  PageHeadPropType,\n  PageDefaultLayoutType,\n  PagePaginationType\n} from 'consts/page'\n\nexport const query = graphql`\n  query PageDefaultQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      tableOfContents\n      frontmatter {\n        title\n        description\n        date(formatString: \"DD MMMM YYYY\")\n      }\n    }\n  }\n`\n\nexport const Head = (props: PageHeadPropType) => {\n  const { data, pageContext } = props\n  const { siteUrl, author } = useSiteMetadata()\n  const { title = '', description, date } = data.mdx.frontmatter\n  const dateToISOString = useMemo(\n    () => new Date(`${date} UTC`).toISOString(),\n    [date]\n  )\n\n  return (\n    <Seo\n      title={title}\n      description={description}\n      url={`${siteUrl}${pageContext.slug}`}\n    >\n      <script type=\"application/ld+json\">\n        {`\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"TechArticle\",\n        \"name\": \"${removeProtocol(siteUrl)}\",\n        \"description\": \"${description}\",\n        \"url\": \"${siteUrl}${pageContext.slug}\",\n        \"headline\": \"${title}\",\n        \"image\": \"${siteUrl}/share-image.png\",\n        \"datePublished\": \"${dateToISOString}\",\n        \"dateModified\": \"${dateToISOString}\",\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": \"${author}\"\n        },\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"${author}\",\n          \"logo\": {\n            \"@type\": \"ImageObject\",\n            \"width\": \"512\",\n            \"height\": \"512\",\n            \"url\": \"${siteUrl}${maskable}\"\n          }\n        }\n      }\n    `}\n      </script>\n    </Seo>\n  )\n}\n\nexport type PropType = PropsWithChildren<\n  PagePropType<PageDefaultLayoutType, PagePaginationType>\n>\n\nconst PageDefault = (props: PropType) => {\n  const { pageContext, children } = props\n  const { next, previous, filePath, id } = pageContext\n\n  return (\n    <>\n      <PageBreadcrumbs id={id} />\n      <article id={MAIN_CONTENT_ID}>\n        <Mdx>{children}</Mdx>\n      </article>\n      <PageEditThisPage pageUrl={filePath} />\n      <PagePagination previous={previous} next={next} />\n    </>\n  )\n}\n\nexport default PageDefault\n","import GATSBY_COMPILED_MDX from \"/Users/davidjerleke/Sites/embla-carousel/packages/embla-carousel-docs/src/content/pages/examples/generator.mdx\";\nimport React from 'react';\nimport {PageEditThisPage} from 'components/Page/PageEditThisPage';\nimport {PagePagination} from 'components/Page/PagePagination';\nimport {PageBreadcrumbs} from 'components/Page/PageBreadcrumbs';\nimport {MAIN_CONTENT_ID} from 'components/KeyNavigating/KeyNavigatingSkipToContent';\nimport {CarouselGeneratorForm} from 'components/CarouselGenerator/CarouselGeneratorForm';\nimport {CarouselGeneratorProvider} from 'components/CarouselGenerator/CarouselGeneratorContext';\nimport {Mdx} from 'components/Mdx/Mdx';\nimport {Head} from './Default';\nconst query = \"1476602449\";\nexport {Head};\nconst PageGenerator = props => {\n  const {pageContext, children} = props;\n  const {next, previous, filePath, id} = pageContext;\n  return React.createElement(React.Fragment, null, React.createElement(PageBreadcrumbs, {\n    id: id\n  }), React.createElement(CarouselGeneratorProvider, null, React.createElement(CarouselGeneratorForm, {\n    id: MAIN_CONTENT_ID\n  }, React.createElement(Mdx, null, children))), React.createElement(PageEditThisPage, {\n    pageUrl: filePath\n  }), React.createElement(PagePagination, {\n    previous: previous,\n    next: next\n  }));\n};\nPageGenerator\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageGenerator, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["useCarouselGenerator","useContext","CarouselGeneratorContext","INPUT_FRAMEWORK","createSandboxGeneratorInputId","SANDBOX_GENERATOR_FORM_FIELDS","FRAMEWORK","OPTIONS","SandboxSelectionList","styled","ul","withConfig","displayName","componentId","createGapStyles","SANDBOX_SELECTION_SPACING","CarouselGeneratorFrameworkSettings","formData","onRadioChange","React","role","ID","dynamicGeneratorSandboxes","map","sandbox","key","SandboxSelectionInput","framework","name","FIELD_NAME","id","snakeCaseToKebabCase","value","onChange","checked","label","InputCheckboxDefault","createRadioOrCheckboxDefault","createRadioOrCheckboxCard","HEIGHT","SPACINGS","EIGHT","SIDES_PADDING","THREE","INPUT_RADIUS","BORDER_RADIUSES","BOX","InputTextWrapper","span","BORDER_SIZES","DETAIL","COLORS","DETAIL_LOW_CONTRAST","BACKGROUND_CODE","labelActiveStyles","css","Label","LAYERS","STEP","TEXT_LOW_CONTRAST","labelTextActiveStyles","LabelText","ONE","Highlight","BRAND_GRADIENT_BACKGROUND_STYLES","OUTLINE","Input","input","TAP_HIGHLIGHT_STYLES","KEY_NAVIGATING_STYLES","TEXT_BODY","FONT_SIZES","BODY","_ref","$inputHasValue","FORM_ITEM_SPACING_X","FOUR","FORM_ITEM_SPACING_Y","TWO","FORM_ITEMS_GAP_STYLES","FORM_ITEM_MAX_WIDTH_STYLES","MEDIA","MIN_XS","CarouselGeneratorFormItems","div","CarouselGeneratorFormItem","CarouselGeneratorInputText","props","children","className","restProps","isKeyNavigating","useKeyNavigating","Object","assign","$isKeyNavigating","type","INPUT_AXIS","AXIS","LABEL","VALUE","INPUT_DIRECTION","DIRECTION","INPUT_LOOP","LOOP","INPUT_DRAG_FREE","DRAG_FREE","INPUT_ACCESSIBILITY","ACCESSIBILITY","CarouselGeneratorBasicSettings","onCheckboxChange","axis","useEffect","InputRadioDefault","_ref2","disabled","INPUT_SLIDE_SIZE","SLIDE_SIZE","INPUT_SLIDE_GAP_SIZE","SLIDE_GAP_SIZE","INPUT_SLIDES_TO_SCROLL","SLIDES_TO_SCROLL","CarouselGeneratorSlidesSettings","onNumberChange","onNumberBlur","min","max","onBlur","parseInt","slideSize","event","currentTarget","INPUT_ALIGN","ALIGN","INPUT_CONTAIN_SCROLL","CONTAIN_SCROLL","CarouselGeneratorAlignmentSettings","loop","Admonition","INPUT_PREV_NEXT_BUTTONS","NAVIGATION_PREV_NEXT_BUTTONS","INPUT_DOTS","NAVIGATION_DOTS","CarouselGeneratorNavigationSettings","INPUT_AUTOPLAY","AUTOPLAY","INPUT_WHEEL_GESTURES","WHEEL_GESTURES","CarouselGeneratorPlugins","CarouselGeneratorSubmit","setSandbox","useState","sandboxKey","isLoading","loadSandbox","useCallback","async","settings","find","createSandbox","ButtonPrimaryFilledWithLoading","CAROUSEL_ID","CarouselGeneratorCarouselWrapper","$previewLarge","BACKGROUND_SITE","SOFT","$carouselStyles","_ref3","$slideSize","parseFloat","LINE","_ref4","$axis","$align","$direction","baseStyles","ACCENT_VERTICAL","property","basePositioning","CarouselWrapper","CarouselGeneratorCarousel","previewLarge","slideGapSize","navigationDots","navigationPrevNextButtons","slides","useRef","arrayFromNumber","carouselStyles","useMemo","examplesCarouselDefaultStyles","styledComponentsStylesToString","SLIDE_NUMBER_STYLES","CONTROLS_STYLES","ARROWS_STYLES","DOTS_STYLES","align","direction","SandboxGeneratorExample","options","dragFree","containScroll","slidesToScroll","current","autoplay","CarouselGeneratorPreviewWrapper","HEADER","PAGE_FRAME_SPACING","DESKTOP","SIDEBAR_LG_DOWN_WIDTH","MAIN_CONTENT_SPACING","MIN_LG","SIDEBAR_LG_UP_WIDTH","ButtonsWrapper","PreviewSizeButton","ButtonBare","BUTTON_SIZES","MD","TEXT_MEDIUM_CONTRAST","ButtonBareText","PreviewSizeButtonText","visuallyHiddenStyles","CarouselGeneratorPreview","setPreviewLarge","togglePreviewSize","currentSize","onClick","Icon","svg","size","CarouselGeneratorSupport","LinkContent","to","URLS","DONATE_PAYPAL","DONATE_KO_FI","_createMdxContent","_components","h1","p","hr","h2","a","strong","_provideComponents","components","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","CarouselGeneratorForm","action","CODESANDBOX_DEFINE","method","target","Head","data","pageContext","siteUrl","author","useSiteMetadata","title","description","date","mdx","frontmatter","dateToISOString","Date","toISOString","Seo","url","slug","removeProtocol","maskable","PageGenerator","next","previous","filePath","PageBreadcrumbs","CarouselGeneratorProvider","MAIN_CONTENT_ID","Mdx","PageEditThisPage","pageUrl","PagePagination","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}