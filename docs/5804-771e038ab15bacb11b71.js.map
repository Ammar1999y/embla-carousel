{"version":3,"file":"5804-771e038ab15bacb11b71.js","mappings":"uIAAA,+2E","sources":["webpack://embla-carousel-docs/./src/components/Sandbox/Vanilla/SandboxFilesDist/Opacity/EmblaCarouselTweenOpacity.js"],"sourcesContent":["export default \"\\nconst TWEEN_FACTOR_BASE = 0.84;\\nlet tweenFactor = 0;\\n\\nconst numberWithinRange = (number, min, max) => Math.min(Math.max(number, min), max);\\n\\nconst setTweenFactor = (emblaApi) => {\\n    tweenFactor = TWEEN_FACTOR_BASE * emblaApi.scrollSnapList().length;\\n};\\n\\nconst tweenOpacity = (emblaApi, eventName) => {\\n    const engine = emblaApi.internalEngine();\\n    const scrollProgress = emblaApi.scrollProgress();\\n    const slidesInView = emblaApi.slidesInView();\\n    const isScrollEvent = eventName === 'scroll';\\n    \\n    emblaApi.scrollSnapList().forEach((scrollSnap, snapIndex) => {\\n        let diffToTarget = scrollSnap - scrollProgress;\\n        const slidesInSnap = engine.slideRegistry[snapIndex];\\n        \\n        slidesInSnap.forEach((slideIndex) => {\\n            if (isScrollEvent && !slidesInView.includes(slideIndex))\\n                return;\\n            \\n            if (engine.options.loop) {\\n                engine.slideLooper.loopPoints.forEach((loopItem) => {\\n                    const target = loopItem.target();\\n                    \\n                    if (slideIndex === loopItem.index && target !== 0) {\\n                        const sign = Math.sign(target);\\n                        \\n                        if (sign === -1) {\\n                            diffToTarget = scrollSnap - (1 + scrollProgress);\\n                        }\\n                        if (sign === 1) {\\n                            diffToTarget = scrollSnap + (1 - scrollProgress);\\n                        }\\n                    }\\n                });\\n            }\\n            \\n            const tweenValue = 1 - Math.abs(diffToTarget * tweenFactor);\\n            const opacity = numberWithinRange(tweenValue, 0, 1).toString();\\n            emblaApi.slideNodes()[slideIndex].style.opacity = opacity;\\n        });\\n    });\\n};\\n\\nexport const setupTweenOpacity = (emblaApi) => {\\n    const slideNodes = emblaApi.slideNodes();\\n    \\n    setTweenFactor(emblaApi);\\n    tweenOpacity(emblaApi);\\n    \\n    emblaApi\\n        .on('reInit', setTweenFactor)\\n        .on('reInit', tweenOpacity)\\n        .on('scroll', tweenOpacity);\\n    \\n    return () => {\\n        slideNodes.forEach((slide) => slide.removeAttribute('style'));\\n        emblaApi\\n            .off('reInit', setTweenFactor)\\n            .off('reInit', tweenOpacity)\\n            .off('scroll', tweenOpacity);\\n    };\\n};\\n\";"],"names":[],"sourceRoot":""}